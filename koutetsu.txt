
reset_vector:
$00/8075 18          CLC                     ; E = 0
$00/8076 FB          XCE                     ;
$00/8077 78          SEI                     ; I = 1
$00/8078 C2 20       REP #$20                ; S = 0x1FFF
$00/807A A9 FF 1F    LDA #$1FFF              ;
$00/807D 1B          TCS                     ;
$00/807E A9 00 00    LDA #$0000              ; D = 0x0000
$00/8081 5B          TCD                     ;
$00/8082 E2 20       SEP #$20                ; B = 0x80
$00/8084 A9 80       LDA #$80                ;
$00/8086 48          PHA                     ;
$00/8087 AB          PLB                     ;
$00/8088 20 D1 80    JSR $80D1               ; reset()
$00/808B 5C C2 91 80 JMP $8091C2             ; goto $8091C2


nmi_vector:
$00/808F 5C 93 80 80 JMP $808093             ; jmp $808093() // used to set program bank to 0x80
$80/8093 C2 30       REP #$30                ; M = X = 0
$80/8095 48          PHA                     ; pha()
$80/8096 8B          PHB                     ; phb()
$80/8097 0B          PHD                     ; phd()
$80/8098 DA          PHX                     ; phx()
$80/8099 5A          PHY                     ; phy()
$80/809A A9 00 00    LDA #$0000              ; D = 0x0000
$80/809D 5B          TCD                     ;
$80/809E E2 20       SEP #$20                ; B = 0x80
$80/80A0 A9 80       LDA #$80                ;
$80/80A2 48          PHA                     ;
$80/80A3 AB          PLB                     ;
$80/80A4 20 29 82    JSR $8229               ; nmi()
$80/80A7 C2 30       REP #$30                ; M = X = 0
$80/80A9 7A          PLY                     ; ply()
$80/80AA FA          PLX                     ; plx()
$80/80AB 2B          PLD                     ; pld()
$80/80AC AB          PLB                     ; plb()
$80/80AD 68          PLA                     ; pla()
$80/80AE 40          RTI                     ; rti


vram_clear_value:
$00/80D0 00                                  ; 0x00


reset:
$00/80D1 E2 20       SEP #$20                ; INIDISP = 0x8F // blanking, full brightness
$00/80D3 C2 10       REP #$10                ;
$00/80D5 A9 8F       LDA #$8F                ;
$00/80D7 8D 00 21    STA $2100               ;
$00/80DA A2 00 00    LDX #$0000              ; for(X = 0x0000; X != 0x00BF; X++) page00[X] = 0x00
-:
$00/80DD 74 00       STZ $00,x               ;
$00/80DF E8          INX                     ;
$00/80E0 E0 BF 00    CPX #$00BF              ;
$00/80E3 D0 F8       BNE -                   ;
$00/80E5 A2 00 00    LDX #$0000              ; for(X = 0x0000; X != 0x0540; X++) page01[X] = 0x00
-:
$00/80E8 9E 00 01    STZ $0100,x             ;
$00/80EB E8          INX                     ;
$00/80EC E0 40 05    CPX #$0540              ;
$00/80EF D0 F7       BNE -                   ;
$00/80F1 9C 0C 42    STZ $420C               ; HDMAEN = 0x00 // turn off hdma
$00/80F4 A2 00 00    LDX #$0000              ; for(X = 0x0000; X != 0x0080; X += 0x10) {
-:
$00/80F7 9E 00 43    STZ $4300,x             ;     DMAP0[X] = 0x00
$00/80FA 9E 01 43    STZ $4301,x             ;     DMAB0[X] = 0x00
$00/80FD 9E 02 43    STZ $4302,x             ;     DMAA0[X] = 0x000000
$00/8100 9E 03 43    STZ $4303,x             ;
$00/8103 9E 04 43    STZ $4304,x             ;
$00/8106 9E 05 43    STZ $4305,x             ;     DMAN0[X] = 0x000000
$00/8109 9E 06 43    STZ $4306,x             ;
$00/810C 9E 07 43    STZ $4307,x             ;
$00/810F 9E 08 43    STZ $4308,x             ;     DMAT0[X] = 0x0000
$00/8112 9E 09 43    STZ $4309,x             ;
$00/8115 9E 0A 43    STZ $430A,x             ;     DMAH0[X] = 0x00
$00/8118 8A          TXA                     ;
$00/8119 18          CLC                     ;
$00/811A 69 10       ADC #$10                ;
$00/811C AA          TAX                     ;
$00/811D C9 80       CMP #$80                ;
$00/811F D0 D6       BNE -                   ; }
$00/8121 C2 20       REP #$20                ; $9E = 0x0080
$00/8123 A9 80 00    LDA #$0080              ;
$00/8126 85 9E       STA $9E                 ;
$00/8128 85 A0       STA $A0                 ; $A0 = 0x0080
$00/812A A9 E0 00    LDA #$00E0              ; $A1 = 0x00E0
$00/812D 85 A1       STA $A1                 ;
$00/812F A9 F9 FF    LDA #$FFF9              ; $A3 = 0xFFF9
$00/8132 85 A3       STA $A3                 ;
$00/8134 A9 F1 FF    LDA #$FFF1              ; $A5 = 0xFFF1
$00/8137 85 A5       STA $A5                 ;
$00/8139 E2 30       SEP #$30                ; $41 = 0x8F
$00/813B A9 8F       LDA #$8F                ;
$00/813D 85 41       STA $41                 ;
$00/813F 85 4E       STA $4E                 ; $4E = 0x8F
$00/8141 A9 01       LDA #$01                ; $29 = 0x01
$00/8143 85 29       STA $29                 ;
$00/8145 A9 01       LDA #$01                ; $2F = 0x01
$00/8147 85 2F       STA $2F                 ;
$00/8149 A9 30       LDA #$30                ; $45 = 0x30
$00/814B 85 45       STA $45                 ;
$00/814D A9 E0       LDA #$E0                ; $47 = 0xE0
$00/814F 85 47       STA $47                 ;
$00/8151 A9 FF       LDA #$FF                ; WRIO = 0xFF // set expansion port output
$00/8153 8D 01 42    STA $4201               ;
$00/8156 A5 00       LDA $00                 ; BGMODE = $00
$00/8158 8D 05 21    STA $2105               ;
$00/815B A5 01       LDA $01                 ; BG1SC = $01
$00/815D 8D 07 21    STA $2107               ;
$00/8160 A5 02       LDA $02                 ; BG2SC = $02
$00/8162 8D 08 21    STA $2108               ;
$00/8165 A5 03       LDA $03                 ; BG3SC = $03
$00/8167 8D 09 21    STA $2109               ;
$00/816A A5 04       LDA $04                 ; BG4SC = $04
$00/816C 8D 0A 21    STA $210A               ;
$00/816F A5 06       LDA $06                 ; SETINI = $06
$00/8171 8D 33 21    STA $2133               ;
$00/8174 A9 01       LDA #$01                ; $9A = 0x01
$00/8176 85 9A       STA $9A                 ;
$00/8178 9C 0B 21    STZ $210B               ; BG12NBA = 0x00 // bg1, bg2 name base address at vram $0000
$00/817B 9C 0C 21    STZ $210C               ; BG34NBA = 0x00 // bg3, bg4 name base address at vram $0000
$00/817E A9 01       LDA #$01                ; $48 = 0x01
$00/8180 85 48       STA $48                 ;
$00/8182 8D 00 42    STA $4200               ; NMITIMEN = 0x01 // auto read controllers, v and h counters off, nmi off
$00/8185 A9 80       LDA #$80                ; VMAINC = 0x80 // increment by 1, increment on word
$00/8187 8D 15 21    STA $2115               ;
$00/818A A9 09       LDA #$09                ; DMAP0 = 0x09 // write word to 2 addresses, fixed address, a to b bus
$00/818C 8D 00 43    STA $4300               ;
$00/818F A9 80       LDA #$80                ; DMAA0 = 0x8080D0
$00/8191 8D 04 43    STA $4304               ;
$00/8194 A9 18       LDA #$18                ; DMAB0 = 0x18 // VMDATA
$00/8196 8D 01 43    STA $4301               ;
$00/8199 C2 20       REP #$20                ;
$00/819B A9 D0 80    LDA #$80D0              ;
$00/819E 8D 02 43    STA $4302               ;
$00/81A1 A9 00 00    LDA #$0000              ; VMADD = 0x0000
$00/81A4 8D 16 21    STA $2116               ;
$00/81A7 A9 00 00    LDA #$0000              ; DMAN0 = 0x0000 // 0x10000 bytes
$00/81AA 8D 05 43    STA $4305               ;
$00/81AD E2 20       SEP #$20                ; MDMAEN = 0x01 // enable dma0, this clears vram
$00/81AF A9 01       LDA #$01                ;
$00/81B1 8D 0B 42    STA $420B               ;
$00/81B4 A9 01       LDA #$01                ; MEMSEL = 0x01 // fast rom, set access to 3.58MHz
$00/81B6 8D 0D 42    STA $420D               ;
$00/81B9 A9 80       LDA #$80                ; $BC = 0x808958
$00/81BB 85 BE       STA $BE                 ;
$00/81BD C2 20       REP #$20                ;
$00/81BF A9 58 89    LDA #$8958              ;
$00/81C2 85 BC       STA $BC                 ;
$00/81C4 20 C8 81    JSR $81C8               ; sound_boot_loader()
$00/81C7 60          RTS                     ;


sound_boot_loader:
$00/81C8 C2 30       REP #$30                ; // see program on last page of snes dev manual book 1
$00/81CA A0 00 00    LDY #$0000              ;
$00/81CD A9 AA BB    LDA #$BBAA              ;
$00/81D0 CD 40 21    CMP $2140               ; 
$00/81D3 D0 FB       BNE $FB                 ;
$00/81D5 E2 20       SEP #$20                ;
$00/81D7 A9 CC       LDA #$CC                ;
$00/81D9 80 26       BRA $26                 ;
$00/81DB B7 BC       LDA [$BC],y             ;
$00/81DD C8          INY                     ;
$00/81DE EB          XBA                     ;
$00/81DF A9 00       LDA #$00                ;
$00/81E1 80 0B       BRA $0B                 ;
$00/81E3 EB          XBA                     ;
$00/81E4 B7 BC       LDA [$BC],y             ;
$00/81E6 C8          INY                     ;
$00/81E7 EB          XBA                     ;
$00/81E8 CD 40 21    CMP $2140               ;
$00/81EB D0 FB       BNE $FB                 ;
$00/81ED 1A          INC A                   ;
$00/81EE C2 20       REP #$20                ;
$00/81F0 8D 40 21    STA $2140               ;
$00/81F3 E2 20       SEP #$20                ;
$00/81F5 CA          DEX                     ;
$00/81F6 D0 EB       BNE $EB                 ;
$00/81F8 CD 40 21    CMP $2140               ;
$00/81FB D0 FB       BNE $FB                 ;
$00/81FD 69 03       ADC #$03                ;
$00/81FF F0 FC       BEQ $FC                 ;
$00/8201 48          PHA                     ;
$00/8202 C2 20       REP #$20                ;
$00/8204 B7 BC       LDA [$BC],y             ;
$00/8206 C8          INY                     ;
$00/8207 C8          INY                     ;
$00/8208 AA          TAX                     ;
$00/8209 B7 BC       LDA [$BC],y             ;
$00/820B C8          INY                     ;
$00/820C C8          INY                     ;
$00/820D 8D 42 21    STA $2142               ;
$00/8210 E2 20       SEP #$20                ;
$00/8212 E0 01 00    CPX #$0001              ;
$00/8215 A9 00       LDA #$00                ;
$00/8217 2A          ROL A                   ;
$00/8218 8D 41 21    STA $2141               ;
$00/821B 69 7F       ADC #$7F                ;
$00/821D 68          PLA                     ;
$00/821E 8D 40 21    STA $2140               ;
$00/8221 CD 40 21    CMP $2140               ;
$00/8224 D0 FB       BNE $FB                 ;
$00/8226 70 B3       BVS $B3                 ;
$00/8228 60          RTS                     ;


nmi:
$80/8229 E2 30       SEP #$30                ; A = RDNMI // reset nmi by v-blank flag
$80/822B AD 10 42    LDA $4210               ;
$80/822E A9 02       LDA #$02                ; $98 |= 0x02
$80/8230 04 98       TSB $98                 ;
$80/8232 F0 01       BEQ +                   ; if
$80/8234 60          RTS                     ;
+:
$80/8235 A5 98       LDA $98                 ;
$80/8237 29 01       AND #$01                ;
$80/8239 F0 03       BEQ +                   ;
$80/823B 4C 16 83    JMP ++                  ;
+:
$80/823E A5 6E       LDA $6E                 ; MOSAIC = mosaic
$80/8240 8D 06 21    STA $2106               ;
$80/8243 A5 8B       LDA $8B                 ; W12SEL = w12sel
$80/8245 8D 23 21    STA $2123               ;
$80/8248 A5 8C       LDA $8C                 ; W34SEL = w34sel
$80/824A 8D 24 21    STA $2124               ;
$80/824D A5 8D       LDA $8D                 ; WOBJSEL = wobjsel
$80/824F 8D 25 21    STA $2125               ;
$80/8252 A5 8E       LDA $8E                 ; WH0 = wh0
$80/8254 8D 26 21    STA $2126               ;
$80/8257 A5 8F       LDA $8F                 ; WH1 = wh1
$80/8259 8D 27 21    STA $2127               ;
$80/825C A5 90       LDA $90                 ; WH2 = wh2
$80/825E 8D 28 21    STA $2128               ;
$80/8261 A5 91       LDA $91                 ; WH3 = wh3
$80/8263 8D 29 21    STA $2129               ;
$80/8266 A5 92       LDA $92                 ; WBGLOG = wbglog
$80/8268 8D 2A 21    STA $212A               ;
$80/826B A5 93       LDA $93                 ; WOBJLOG = wobjlog
$80/826D 8D 2B 21    STA $212B               ;
$80/8270 A5 94       LDA $94                 ; TM = tm
$80/8272 8D 2C 21    STA $212C               ;
$80/8275 A5 95       LDA $95                 ; TS = ts
$80/8277 8D 2D 21    STA $212D               ;
$80/827A A5 96       LDA $96                 ; TMW = tmw
$80/827C 8D 2E 21    STA $212E               ;
$80/827F A5 97       LDA $97                 ; TSW = tsw
$80/8281 8D 2F 21    STA $212F               ;
$80/8284 A5 6F       LDA $6F                 ; BG1HOFS = bg1hofs.lo
$80/8286 8D 0D 21    STA $210D               ;
$80/8289 A5 70       LDA $70                 ; BG1HOFS = bg1hofs.hi
$80/828B 8D 0D 21    STA $210D               ;
$80/828E A5 71       LDA $71                 ; BG1VOFS = bg1vofs.lo
$80/8290 8D 0E 21    STA $210E               ;
$80/8293 A5 72       LDA $72                 ; BG1VOFS = bg1vofs.hi
$80/8295 8D 0E 21    STA $210E               ;
$80/8298 A5 73       LDA $73                 ; BG2HOFS = bg2hofs.lo
$80/829A 8D 0F 21    STA $210F               ;
$80/829D A5 74       LDA $74                 ; BG2HOFS = bg2hofs.hi
$80/829F 8D 0F 21    STA $210F               ;
$80/82A2 A5 75       LDA $75                 ; BG2VOFS = bg2vofs.lo
$80/82A4 8D 10 21    STA $2110               ;
$80/82A7 A5 76       LDA $76                 ; BG2VOFS = bg2vofs.hi
$80/82A9 8D 10 21    STA $2110               ;
$80/82AC A5 77       LDA $77                 ; BG3HOFS = bg3hofs.lo
$80/82AE 8D 11 21    STA $2111               ;
$80/82B1 A5 78       LDA $78                 ; BG3HOFS = bg3hofs.hi
$80/82B3 8D 11 21    STA $2111               ;
$80/82B6 A5 79       LDA $79                 ; BG3VOFS = bg3vofs.lo
$80/82B8 8D 12 21    STA $2112               ;
$80/82BB A5 7A       LDA $7A                 ; BG3VOFS = bg3vofs.hi
$80/82BD 8D 12 21    STA $2112               ;
$80/82C0 A5 7B       LDA $7B                 ; BG4HOFS = bg4hofs.lo
$80/82C2 8D 13 21    STA $2113               ;
$80/82C5 A5 7C       LDA $7C                 ; BG4HOFS = bg4hofs.hi
$80/82C7 8D 13 21    STA $2113               ;
$80/82CA A5 7D       LDA $7D                 ; BG4VOFS = bg4vofs.lo
$80/82CC 8D 14 21    STA $2114               ;
$80/82CF A5 7E       LDA $7E                 ; BG4VOFS = bg4vofs.hi
$80/82D1 8D 14 21    STA $2114               ;
$80/82D4 A5 7F       LDA $7F                 ; M7A = m7a.lo
$80/82D6 8D 1B 21    STA $211B               ;
$80/82D9 A5 80       LDA $80                 ; M7A = m7a.hi
$80/82DB 8D 1B 21    STA $211B               ;
$80/82DE A5 81       LDA $81                 ; M7B = m7b.lo
$80/82E0 8D 1C 21    STA $211C               ;
$80/82E3 A5 82       LDA $82                 ; M7B = m7b.hi
$80/82E5 8D 1C 21    STA $211C               ;
$80/82E8 A5 83       LDA $83                 ; M7C = m7c.lo
$80/82EA 8D 1D 21    STA $211D               ;
$80/82ED A5 84       LDA $84                 ; M7C = m7c.hi
$80/82EF 8D 1D 21    STA $211D               ;
$80/82F2 A5 85       LDA $85                 ; M7D = m7d.lo
$80/82F4 8D 1E 21    STA $211E               ;
$80/82F7 A5 86       LDA $86                 ; M7D = m7d.hi
$80/82F9 8D 1E 21    STA $211E               ;
$80/82FC A5 87       LDA $87                 ; M7X = m7x.lo
$80/82FE 8D 1F 21    STA $211F               ;
$80/8301 A5 88       LDA $88                 ; M7X = m7x.hi
$80/8303 8D 1F 21    STA $211F               ;
$80/8306 A5 89       LDA $89                 ; M7Y = m7y.lo
$80/8308 8D 20 21    STA $2120               ;
$80/830B A5 8A       LDA $8A                 ; M7Y = m7y.hi
$80/830D 8D 20 21    STA $2120               ;
$80/8310 20 46 85    JSR $8546               ; $8546()
$80/8313 64 98       STZ $98                 ; $98 = 0x00
$80/8315 60          RTS                     ;
++:
$80/8316 20 AD 84    JSR $84AD               ; oam_dma()
$80/8319 A5 43       LDA $43                 ; OAMADD = oamadd // configure priority rotation
$80/831B 8D 02 21    STA $2102               ;
$80/831E A5 44       LDA $44                 ;
$80/8320 8D 03 21    STA $2103               ;
$80/8323 20 D8 84    JSR $84D8               ; cgram_dma()
$80/8326 20 08 85    JSR $8508               ; $8508()
$80/8329 20 46 85    JSR $8546               ; vram_dma()
$80/832C A5 17       LDA $17                 ; MOSAIC = mosaic
$80/832E 8D 06 21    STA $2106               ;
$80/8331 A5 34       LDA $34                 ; W12SEL = w12sel
$80/8333 8D 23 21    STA $2123               ;
$80/8336 A5 35       LDA $35                 ; W34SEL = w34sel
$80/8338 8D 24 21    STA $2124               ;
$80/833B A5 36       LDA $36                 ; WOBJSEL = wobjsel
$80/833D 8D 25 21    STA $2125               ;
$80/8340 A5 37       LDA $37                 ; WH0 = wh0
$80/8342 8D 26 21    STA $2126               ;
$80/8345 A5 38       LDA $38                 ; WH1 = wh1
$80/8347 8D 27 21    STA $2127               ;
$80/834A A5 39       LDA $39                 ; WH2 = wh2
$80/834C 8D 28 21    STA $2128               ;
$80/834F A5 3A       LDA $3A                 ; WH3 = wh3
$80/8351 8D 29 21    STA $2129               ;
$80/8354 A5 3B       LDA $3B                 ; WBGLOG = wbglog
$80/8356 8D 2A 21    STA $212A               ;
$80/8359 A5 3C       LDA $3C                 ; WOBJLOG = wobjlog
$80/835B 8D 2B 21    STA $212B               ;
$80/835E A5 3D       LDA $3D                 ; TM = tm
$80/8360 8D 2C 21    STA $212C               ;
$80/8363 A5 3E       LDA $3E                 ; TS = ts
$80/8365 8D 2D 21    STA $212D               ;
$80/8368 A5 3F       LDA $3F                 ; TMW = tmw
$80/836A 8D 2E 21    STA $212E               ;
$80/836D A5 40       LDA $40                 ; TSW = tsw
$80/836F 8D 2F 21    STA $212F               ;
$80/8372 A5 18       LDA $18                 ; BG1HOFS = bg1hofs.lo
$80/8374 8D 0D 21    STA $210D               ;
$80/8377 A5 19       LDA $19                 ; BG1HOFS = bg1hofs.hi
$80/8379 8D 0D 21    STA $210D               ;
$80/837C A5 1A       LDA $1A                 ; BG1VOFS = bg1vofs.lo
$80/837E 8D 0E 21    STA $210E               ;
$80/8381 A5 1B       LDA $1B                 ; BG1VOFS = bg1vofs.hi
$80/8383 8D 0E 21    STA $210E               ;
$80/8386 A5 1C       LDA $1C                 ; BG2HOFS = bg2hofs.lo
$80/8388 8D 0F 21    STA $210F               ;
$80/838B A5 1D       LDA $1D                 ; BG2HOFS = bg2hofs.hi
$80/838D 8D 0F 21    STA $210F               ;
$80/8390 A5 1E       LDA $1E                 ; BG2VOFS = bg2vofs.lo
$80/8392 8D 10 21    STA $2110               ;
$80/8395 A5 1F       LDA $1F                 ; BG2VOFS = bg2vofs.hi
$80/8397 8D 10 21    STA $2110               ;
$80/839A A5 20       LDA $20                 ; BG3HOFS = bg3hofs.lo
$80/839C 8D 11 21    STA $2111               ;
$80/839F A5 21       LDA $21                 ; BG3HOFS = bg3hofs.hi
$80/83A1 8D 11 21    STA $2111               ;
$80/83A4 A5 22       LDA $22                 ; BG3VOFS = bg3vofs.lo
$80/83A6 8D 12 21    STA $2112               ;
$80/83A9 A5 23       LDA $23                 ; BG3VOFS = bg3vofs.hi
$80/83AB 8D 12 21    STA $2112               ;
$80/83AE A5 24       LDA $24                 ; BG4HOFS = bg4hofs.lo
$80/83B0 8D 13 21    STA $2113               ;
$80/83B3 A5 25       LDA $25                 ; BG4HOFS = bg4hofs.hi
$80/83B5 8D 13 21    STA $2113               ;
$80/83B8 A5 26       LDA $26                 ; BG4VOFS = bg4vofs.lo
$80/83BA 8D 14 21    STA $2114               ;
$80/83BD A5 27       LDA $27                 ; BG4VOFS = bg4vofs.hi
$80/83BF 8D 14 21    STA $2114               ;
$80/83C2 A5 28       LDA $28                 ; M7A = m7a.lo
$80/83C4 8D 1B 21    STA $211B               ;
$80/83C7 A5 29       LDA $29                 ; M7A = m7a.hi
$80/83C9 8D 1B 21    STA $211B               ;
$80/83CC A5 2A       LDA $2A                 ; M7B = m7b.lo
$80/83CE 8D 1C 21    STA $211C               ;
$80/83D1 A5 2B       LDA $2B                 ; M7B = m7b.hi
$80/83D3 8D 1C 21    STA $211C               ;
$80/83D6 A5 2C       LDA $2C                 ; M7C = m7c.lo
$80/83D8 8D 1D 21    STA $211D               ;
$80/83DB A5 2D       LDA $2D                 ; M7C = m7c.hi
$80/83DD 8D 1D 21    STA $211D               ;
$80/83E0 A5 2E       LDA $2E                 ; M7D = m7d.lo
$80/83E2 8D 1E 21    STA $211E               ;
$80/83E5 A5 2F       LDA $2F                 ; M7D = m7d.hi
$80/83E7 8D 1E 21    STA $211E               ;
$80/83EA A5 30       LDA $30                 ; M7X = m7x.lo
$80/83EC 8D 1F 21    STA $211F               ;
$80/83EF A5 31       LDA $31                 ; M7X = m7x.hi
$80/83F1 8D 1F 21    STA $211F               ;
$80/83F4 A5 32       LDA $32                 ; M7Y = m7y.lo
$80/83F6 8D 20 21    STA $2120               ;
$80/83F9 A5 33       LDA $33                 ; M7Y = m7y.hi
$80/83FB 8D 20 21    STA $2120               ;
$80/83FE A5 42       LDA $42                 ; OBJSEL = objsel
$80/8400 8D 01 21    STA $2101               ;
$80/8403 A5 45       LDA $45                 ; CGSWSEL = cgswsel
$80/8405 8D 30 21    STA $2130               ;
$80/8408 A5 46       LDA $46                 ; CGADSUB = cgadsub
$80/840A 8D 31 21    STA $2131               ;
$80/840D A5 47       LDA $47                 ; COLDATA = coldata
$80/840F 8D 32 21    STA $2132               ;
$80/8412 A5 48       LDA $48                 ; NMITIMEN = nmitimen
$80/8414 8D 00 42    STA $4200               ;
$80/8417 A5 49       LDA $49                 ; HTIME = htime
$80/8419 8D 07 42    STA $4207               ;
$80/841C A5 4A       LDA $4A                 ;
$80/841E 8D 08 42    STA $4208               ;
$80/8421 A5 4B       LDA $4B                 ; VTIME = vtime
$80/8423 8D 09 42    STA $4209               ;
$80/8426 A5 4C       LDA $4C                 ;
$80/8428 8D 0A 42    STA $420A               ;
$80/842B A5 4D       LDA $4D                 ; HDMAEN = hdmaen
$80/842D 8D 0C 42    STA $420C               ;
$80/8430 A5 41       LDA $41                 ; INIDISP = inidisp
$80/8432 8D 00 21    STA $2100               ;
$80/8435 85 4E       STA $4E                 ;
$80/8437 AD 3E 21    LDA $213E               ; $4F = $213E
$80/843A 85 4F       STA $4F                 ;
$80/843C 20 A4 85    JSR $85A4               ; read_joy()
$80/843F 20 EE 85    JSR $85EE               ; read_mouse()
$80/8442 A5 66       LDA $66                 ; $54 |= $66
$80/8444 04 54       TSB $54                 ;
$80/8446 A5 67       LDA $67                 ; $56 |= $67
$80/8448 04 56       TSB $56                 ;
$80/844A A5 68       LDA $68                 ; $58 |= $68
$80/844C 04 58       TSB $58                 ;
$80/844E A5 69       LDA $69                 ; $5A |= $69
$80/8450 04 5A       TSB $5A                 ;
$80/8452 C2 20       REP #$20                ; $6E = $17
$80/8454 A5 17       LDA $17                 ;
$80/8456 85 6E       STA $6E                 ;
$80/8458 A5 19       LDA $19                 ; $70 = $19
$80/845A 85 70       STA $70                 ;
$80/845C A5 1B       LDA $1B                 ; $72 = $1B
$80/845E 85 72       STA $72                 ;
$80/8460 A5 1D       LDA $1D                 ; $74 = $1D
$80/8462 85 74       STA $74                 ;
$80/8464 A5 1F       LDA $1F                 ; $76 = $1F
$80/8466 85 76       STA $76                 ;
$80/8468 A5 21       LDA $21                 ; $78 = $21
$80/846A 85 78       STA $78                 ;
$80/846C A5 23       LDA $23                 ; $7A = $23
$80/846E 85 7A       STA $7A                 ;
$80/8470 A5 25       LDA $25                 ; $7C = $25
$80/8472 85 7C       STA $7C                 ;
$80/8474 A5 27       LDA $27                 ; $7E = $27
$80/8476 85 7E       STA $7E                 ;
$80/8478 A5 29       LDA $29                 ; $80 = $29
$80/847A 85 80       STA $80                 ;
$80/847C A5 2B       LDA $2B                 ; $82 = $2B
$80/847E 85 82       STA $82                 ;
$80/8480 A5 2D       LDA $2D                 ; $84 = $2D
$80/8482 85 84       STA $84                 ;
$80/8484 A5 2F       LDA $2F                 ; $86 = $2F
$80/8486 85 86       STA $86                 ;
$80/8488 A5 31       LDA $31                 ; $88 = $31
$80/848A 85 88       STA $88                 ;
$80/848C A5 33       LDA $33                 ; $8A = $33
$80/848E 85 8A       STA $8A                 ;
$80/8490 A5 35       LDA $35                 ; $8C = $35
$80/8492 85 8C       STA $8C                 ;
$80/8494 A5 37       LDA $37                 ; $8E = $37
$80/8496 85 8E       STA $8E                 ;
$80/8498 A5 39       LDA $39                 ; $90 = $39
$80/849A 85 90       STA $90                 ;
$80/849C A5 3B       LDA $3B                 ; $92 = $3B
$80/849E 85 92       STA $92                 ;
$80/84A0 A5 3D       LDA $3D                 ; $94 = $3D
$80/84A2 85 94       STA $94                 ;
$80/84A4 A5 3F       LDA $3F                 ; $96 = $3F
$80/84A6 85 96       STA $96                 ;
$80/84A8 E2 20       SEP #$20                ; $98 = 0x00
$80/84AA 64 98       STZ $98                 ;
$80/84AC 60          RTS                     ;


oam_dma:
$80/84AD A9 00       LDA #$00                ; DMAP0 = 0x00 // 1 address, increment, a to b bus
$80/84AF 8D 00 43    STA $4300               ;
$80/84B2 A9 00       LDA #$00                ; DMAA0 = 0x000100
$80/84B4 8D 04 43    STA $4304               ;
$80/84B7 A9 04       LDA #$04                ; DMAB0 = 0x04 // OAMDATA
$80/84B9 8D 01 43    STA $4301               ;
$80/84BC C2 20       REP #$20                ;
$80/84BE A9 00 00    LDA #$0000              ; OAMADD = 0x0000
$80/84C1 8D 02 21    STA $2102               ;
$80/84C4 A9 00 01    LDA #$0100              ;
$80/84C7 8D 02 43    STA $4302               ;
$80/84CA A9 20 02    LDA #$0220              ; DMAN0 = 0x0220
$80/84CD 8D 05 43    STA $4305               ;
$80/84D0 E2 20       SEP #$20                ;
$80/84D2 A9 01       LDA #$01                ; MDMAEN = 0x01
$80/84D4 8D 0B 42    STA $420B               ;
$80/84D7 60          RTS                     ;


cgram_dma:
$80/84D8 A9 FF       LDA #$FF                ; if(update_cgram_flag) {
$80/84DA 14 9A       TRB $9A                 ;
$80/84DC F0 29       BEQ +                   ;
$80/84DE A9 00       LDA #$00                ;     CGADD = 0x00
$80/84E0 8D 21 21    STA $2121               ;
$80/84E3 A9 00       LDA #$00                ;     DMAP0 = 0x00 // 1 address, increment, a to b bus
$80/84E5 8D 00 43    STA $4300               ;
$80/84E8 A9 00       LDA #$00                ;     DMAA0 = 0x000340
$80/84EA 8D 04 43    STA $4304               ;
$80/84ED A9 22       LDA #$22                ;     DMAB0 = 0x22 // CGDATA
$80/84EF 8D 01 43    STA $4301               ;
$80/84F2 C2 20       REP #$20                ;
$80/84F4 A9 40 03    LDA #$0340              ;
$80/84F7 8D 02 43    STA $4302               ;
$80/84FA A9 00 02    LDA #$0200              ;     DMAN0 = 0x0200
$80/84FD 8D 05 43    STA $4305               ;
$80/8500 E2 20       SEP #$20                ;     MDMAEN = 0x01
$80/8502 A9 01       LDA #$01                ; }
$80/8504 8D 0B 42    STA $420B               ; update_cgram_flag = 0x00
+:
$80/8507 60          RTS                     ;


$80/8508 A5 A9       LDA $A9                 ; if(A = $A9) {
$80/850A F0 39       BEQ +                   ;
$80/850C 64 A9       STZ $A9                 ;     $A9 = 0x00
$80/850E C9 04       CMP #$04                ;     DMAN0 = (A != 0x04) ? 0x0080 : 0x0040
$80/8510 C2 20       REP #$20                ;
$80/8512 F0 05       BEQ +else               ;
$80/8514 A9 80 00    LDA #$0080              ;
$80/8517 80 03       BRA +if                 ;
+else:
$80/8519 A9 40 00    LDA #$0040              ;
+if:
$80/851C 8D 05 43    STA $4305               ;
$80/851F A9 40 05    LDA #$0540              ;     DMAA0 = 0x000540
$80/8522 8D 02 43    STA $4302               ;
$80/8525 A5 A7       LDA $A7                 ;     VMADD = $A7
$80/8527 8D 16 21    STA $2116               ;
$80/852A E2 20       SEP #$20                ;     VMAINC = 0x80 // increment by 1 after writing word
$80/852C A9 80       LDA #$80                ;
$80/852E 8D 15 21    STA $2115               ;
$80/8531 A9 00       LDA #$00                ;
$80/8533 8D 04 43    STA $4304               ;
$80/8536 A9 01       LDA #$01                ;     DMAP0 = 0x01 // 2 address, increment, a to b bus
$80/8538 8D 00 43    STA $4300               ;
$80/853B A9 18       LDA #$18                ;     DMAB0 = 0x18 // VMDATA
$80/853D 8D 01 43    STA $4301               ;
$80/8540 A9 01       LDA #$01                ;     MDMAEN = 0x01
$80/8542 8D 0B 42    STA $420B               ;
+:
$80/8545 60          RTS                     ; }


vram_dma:
$80/8546 E2 30       SEP #$30                ; A = $9C
$80/8548 A9 01       LDA #$01                ; $9C |= 0x01
$80/854A 04 9C       TSB $9C                 ; if(A & 0x01)
$80/854C F0 01       BEQ +                   ;
$80/854E 60          RTS                     ;     return
+:
$80/854F A2 00       LDX #$00                ; for(X = 0x00; X != $9B; X += 0x08) {
-:
$80/8551 E4 9B       CPX $9B                 ;
$80/8553 D0 05       BNE xfer                ;
$80/8555 64 9B       STZ $9B                 ;
$80/8557 64 9C       STZ $9C                 ;
$80/8559 60          RTS                     ; xfer:
xfer:
$80/855A C2 20       REP #$20                ;     DMAA0 = $05C1[X]
$80/855C BD C2 05    LDA $05C2,x             ;
$80/855F 8D 02 43    STA $4302               ;
$80/8562 BD C4 05    LDA $05C4,x             ;     VMADD = $05C4[X]
$80/8565 8D 16 21    STA $2116               ;
$80/8568 BD C6 05    LDA $05C6,x             ;     DMAN0 = $05C6[X]
$80/856B 8D 05 43    STA $4305               ;
$80/856E E2 20       SEP #$20                ;     DMAB0 = 0x18 // VMDATA
$80/8570 A9 18       LDA #$18                ;
$80/8572 8D 01 43    STA $4301               ;
$80/8575 BD C0 05    LDA $05C0,x             ;     VMAINC = $05C0[X]
$80/8578 8D 15 21    STA $2115               ;
$80/857B BD C1 05    LDA $05C1,x             ;
$80/857E 8D 04 43    STA $4304               ;
$80/8581 A9 01       LDA #$01                ;     DMAP0 = 0x01 // 2 address, increment, a to b bus
$80/8583 8D 00 43    STA $4300               ;
$80/8586 A9 01       LDA #$01                ;     MDMAEN = 0x01
$80/8588 8D 0B 42    STA $420B               ;
$80/858B A9 80       LDA #$80                ;     if(!($4E & 0x80) || !(HVBJOY & 0x80)) {
$80/858D 24 4E       BIT $4E                 ;
$80/858F D0 0C       BNE +                   ;
$80/8591 2C 12 42    BIT $4212               ;
$80/8594 D0 07       BNE +                   ;
-wait:
$80/8596 2C 12 42    BIT $4212               ;         while(!(HVBJOY & 0x80)) // wait for vblank
$80/8599 F0 FB       BEQ -wait               ;
$80/859B 80 BD       BRA xfer                ;         goto xfer
+:
$80/859D 8A          TXA                     ;     }
$80/859E 18          CLC                     ;
$80/859F 69 08       ADC #$08                ; }
$80/85A1 AA          TAX                     ; $9B = 0x00
$80/85A2 80 AD       BRA -                   ; $9C = 0x00


read_joy:
$80/85A4 A9 01       LDA #$01                ; while($48 & 0x01)
$80/85A6 24 48       BIT $48                 ;
-wait:
$80/85A8 D0 01       BNE -wait               ;
-wait:
$80/85AB AD 12 42    LDA $4212               ; while(HVBJOY & 0x01) // wait for auto read to complete
$80/85AE 29 01       AND #$01                ;
$80/85B0 D0 F9       BNE -wait               ;
$80/85B2 A2 00       LDX #$00                ; for(X = 0x00; X != 0x04; X += 0x02) {
-:
$80/85B4 C2 20       REP #$20                ;     A = JOY1[X]
$80/85B6 BD 18 42    LDA $4218,x             ;
$80/85B9 89 0F 00    BIT #$000F              ;     if(A & 0x000F) {
$80/85BC F0 08       BEQ +else               ;         // non-standard controller connected, ignore input
$80/85BE 74 54       STZ $54,x               ;         joy1[X] = 0x0000
$80/85C0 74 58       STZ $58,x               ;         joy1_edge[X] = 0x0000
$80/85C2 74 50       STZ $50,x               ;         joy1_old[X] = 0x0000
$80/85C4 80 0C       BRA +if                 ;     } else {
+else:
$80/85C6 95 54       STA $54,x               ;         joy1[X] = A
$80/85C8 55 50       EOR $50,x               ;         joy1_edge[X] = (A ^ joy1_old[X]) & joy1[X]
$80/85CA 35 54       AND $54,x               ;
$80/85CC 95 58       STA $58,x               ;
$80/85CE B5 54       LDA $54,x               ;         joy1_old[X] = joy1[X]
$80/85D0 95 50       STA $50,x               ;     }
+if:
$80/85D2 E8          INX                     ;
$80/85D3 E8          INX                     ;
$80/85D4 E0 04       CPX #$04                ;
$80/85D6 D0 DC       BNE -                   ; }
$80/85D8 E2 20       SEP #$20                ;
$80/85DA 60          RTS                     ;


// mouse bios. see snes dev manual book 2 page 4-7-1
read_mouse:
$80/85EE 08          PHP                     ; while(HVBJOY & 0x01) // wait for controller auto read
$80/85EF E2 30       SEP #$30                ;
-wait:
$80/85F1 AD 12 42    LDA $4212               ;
$80/85F4 29 01       AND #$01                ;
$80/85F6 D0 F9       BNE -wait               ;
$80/85F8 A2 01       LDX #$01                ; X = 0x01
$80/85FA AD 1A 42    LDA $421A               ; A = JOY2.lo
$80/85FD 20 1D 86    JSR $861D               ; mouse_data()
$80/8600 A5 6D       LDA $6D                 ; if($6D) {
$80/8602 F0 07       BEQ +                   ;
$80/8604 20 64 86    JSR $8664               ;     mouse_change_speed()
$80/8607 64 6D       STZ $6D                 ;     $6D = 0x00
$80/8608 28          PLP                     ;     return
$80/8609 60          RTS                     ; }
+:
$80/860B CA          DEX                     ; X = 0x00
$80/860C AD 18 42    LDA $4218               ; A = JOY1.lo
$80/860F 20 1D 86    JSR $861D               ; mouse_data()
$80/8612 A5 6C       LDA $6C                 ; if($6C) {
$80/8614 F0 05       BEQ +                   ;
$80/8616 20 64 86    JSR $8664               ;     mouse_change_speed()
$80/8619 64 6C       STZ $6C                 ;     $6C = 0x00
+:
$80/861B 28          PLP                     ; }
$80/861C 60          RTS                     ;


mouse_data:
$80/861D 85 B1       STA $B1                 ; $B1 = A
$80/861F 29 0F       AND #$0F                ; if(A & 0x0F != 0x01) {
$80/8621 C9 01       CMP #$01                ;
$80/8623 F0 0D       BEQ +                   ;
$80/8625 74 5C       STZ $5C,x               ;     $5C[X] = 0x00
$80/8627 74 64       STZ $64,x               ;     $64[X] = 0x00
$80/8629 74 62       STZ $62,x               ;     $62[X] = 0x00
$80/862B 74 66       STZ $66,x               ;     $66[X] = 0x00
$80/862D 74 68       STZ $68,x               ;     $68[X] = 0x00
$80/862F 74 6A       STZ $6A,x               ;     $6A[X] = 0x00
$80/8631 60          RTS                     ; } else {
+:
$80/8632                                     ; ???


mouse_change_speed:
$80/8664 08          PHP                     ; if($5C[X]) {
$80/8665 E2 30       SEP #$30                ;
$80/8667 B5 5C       LDA $5C,x               ;     ???
$80/8669 F0 39       BEQ +                   ;
$80/866B                                     ; }
+:
$80/86A4 A9 80       LDA #$80                ;
$80/86A6 95 60       STA $60,x               ; $60[X] = 0x80
$80/86A8 28          PLP                     ;
$80/86A9 60          RTS                     ;


mouse_bios_strings:
$80/86AA
"NINTENDO SHVC MOUSE BIOS Ver1.00"
"END OF MOUSE BIOS"


$80/86DB E2 10       SEP #$10                ;
$80/86DD C2 20       REP #$20                ;
$80/86DF 0B          PHD                     ; phd()
$80/86E0 A9 00 00    LDA #$0000              ; D = 0x0000
$80/86E3 5B          TCD                     ;
$80/86E4 E2 20       SEP #$20                ; A = $00 & 0x07
$80/86E6 A5 00       LDA $00                 ;
$80/86E8 29 07       AND #$07                ;
$80/86EA F0 1D       BEQ +                   ; if(A && !(A & 0x01)) {
$80/86EC 89 01       BIT #$01                ;
$80/86EE D0 19       BNE +                   ;
$80/86F0 85 A9       STA $A9                 ;     $A9 = A
$80/86F2 A5 03       LDA $03                 ;     $A7 = (($03 & 0xFC) << 8) + ($20 >> 3)
$80/86F4 29 FC       AND #$FC                ;
$80/86F6 EB          XBA                     ;
$80/86F7 A5 20       LDA $20                 ;
$80/86F9 4A          LSR A                   ;
$80/86FA 4A          LSR A                   ;
$80/86FB 4A          LSR A                   ;
$80/86FC C2 20       REP #$20                ;
$80/86FE 85 A7       STA $A7                 ;
$80/8700 A5 22       LDA $22                 ;     $A7 |= ($22 << 2) & 0x03E0
$80/8702 0A          ASL A                   ;
$80/8703 0A          ASL A                   ;
$80/8704 29 E0 03    AND #$03E0              ;
$80/8707 04 A7       TSB $A7                 ; }
+:
$80/8709 E2 20       SEP #$20                ; if(!($48 & 0x80)) {
$80/870B A5 48       LDA $48                 ;
$80/870D 89 80       BIT #$80                ;     ???
$80/870F D0 08       BNE +                   ;
$80/8711                                     ; }
+:
$80/8719 A5 4E       LDA $4E                 ; if($4E & 0x80) {
$80/871B 89 80       BIT #$80                ; 
$80/871D F0 04       BEQ +                   ;     $808810()
$80/871F 22 10 88 80 JSL $808810             ; }
+:
$80/8723 A9 01       LDA #$01                ; $98 = 0x01
$80/8725 85 98       STA $98                 ;
-:
$80/8727 A5 98       LDA $98                 ; while($98) // some sort of flag controlled by nmi
$80/8729 D0 FC       BNE -                   ;
$80/872B 64 15       STZ $15                 ; $15 = 0x00
$80/872D 64 16       STZ $16                 ; $16 = 0x00
$80/872F 2B          PLD                     ; pld()
$80/8730 6B          RTL                     ;


$80/8731 C2 30       REP #$30                ;
$80/8733 0B          PHD                     ; phd()
$80/8734 A9 00 00    LDA #$0000              ; D = 0x0000
$80/8737 5B          TCD                     ;
$80/8738 E2 30       SEP #$30                ;
$80/873A 8B          PHB                     ; phb()
$80/873B 48          PHA                     ; B = 0x00
$80/873C AB          PLB                     ;
$80/873D A5 9E       LDA $9E                 ; if($9E != $9D) {
$80/873F 38          SEC                     ;
$80/8740 E5 9D       SBC $9D                 ;
$80/8742 F0 26       BEQ +                   ;
$80/8744 A8          TAY                     ;     Y = $9E - $9D;
$80/8745 A5 9D       LDA $9D                 ;     WMADD = $9D * 4 + 0x0100
$80/8747 C2 20       REP #$20                ;
$80/8749 0A          ASL A                   ;
$80/874A 0A          ASL A                   ;
$80/874B 18          CLC                     ;
$80/874C 69 00 01    ADC #$0100              ;
$80/874F 8D 81 21    STA $2181               ;
$80/8752 E2 30       SEP #$30                ;
$80/8754 9C 83 21    STZ $2183               ;
$80/8757 A9 D0       LDA #$D0                ;     do{
$80/8759 A2 F0       LDX #$F0                ;
-:
$80/875B 8D 80 21    STA $2180  {$7E:0100}   ;         WMDATA = 0xD0
$80/875E 8E 80 21    STX $2180               ;         WMDATA = 0xF0
$80/8761 9C 80 21    STZ $2180               ;         WMDATA = 0x00
$80/8764 9C 80 21    STZ $2180               ;         WMDATA = 0x00
$80/8767 88          DEY                     ;     } while(--Y)
$80/8768 D0 F1       BNE -                   ; }
+
$80/876A AB          PLB                     ; plb()
$80/876B 2B          PLD                     ; pld()
$80/876C 6B          RTL                     ;


$80/876D C2 20       REP #$20                ;
$80/876F 0B          PHD                     ; phd()
$80/8770 A9 00 03    LDA #$0300              ; D = 0x0300
$80/8773 5B          TCD                     ;
$80/8774 A5 20       LDA $20                 ; $00 = $20
$80/8776 85 00       STA $00                 ;
$80/8778 A5 22       LDA $22                 ; $02 = $22
$80/877A 85 02       STA $02                 ;
$80/877C A5 24       LDA $24                 ; $04 = $24
$80/877E 85 04       STA $04                 ;
$80/8780 A5 26       LDA $26                 ; $06 = $26
$80/8782 85 06       STA $06                 ;
$80/8784 A5 28       LDA $28                 ; $08 = $28
$80/8786 85 08       STA $08                 ;
$80/8788 A5 2A       LDA $2A                 ; $0A = $2A
$80/878A 85 0A       STA $0A                 ;
$80/878C A5 2C       LDA $2C                 ; $0C = $2C
$80/878E 85 0C       STA $0C                 ;
$80/8790 A5 2E       LDA $2E                 ; $0E = $2E
$80/8792 85 0E       STA $0E                 ;
$80/8794 A5 30       LDA $30                 ; $10 = $30
$80/8796 85 10       STA $10                 ;
$80/8798 A5 32       LDA $32                 ; $12 = $32
$80/879A 85 12       STA $12                 ;
$80/879C A5 34       LDA $34                 ; $14 = $34
$80/879E 85 14       STA $14                 ;
$80/87A0 A5 36       LDA $36                 ; $16 = $36
$80/87A2 85 16       STA $16                 ;
$80/87A4 A5 38       LDA $38                 ; $18 = $38
$80/87A6 85 18       STA $18                 ;
$80/87A8 A5 3A       LDA $3A                 ; $1A = $3A
$80/87AA 85 1A       STA $1A                 ;
$80/87AC A5 3C       LDA $3C                 ; $1C = $3C
$80/87AE 85 1C       STA $1C                 ;
$80/87B0 A5 3E       LDA $3E                 ; $1E = $3E
$80/87B2 85 1E       STA $1E                 ;
$80/87B4 E2 20       SEP #$20                ; $00009D = 0x00
$80/87B6 A9 00       LDA #$00                ;
$80/87B8 8F 9D 00 00 STA $00009D             ;
$80/87BC AF A0 00 00 LDA $0000A0             ; $00009E = $0000A0
$80/87C0 8F 9E 00 00 STA $00009E             ;
$80/87C4 2B          PLD                     ; pld()
$80/87C5 6B          RTL                     ;


$80/87E7 C2 30       REP #$30                ;
$80/87E9 0B          PHD                     ; phd()
$80/87EA A9 00 03    LDA #$0300              ; D = 0x0300
$80/87ED 5B          TCD                     ;
$80/87EE A2 00 00    LDX #$0000              ; for(X = 0x0000; X != 0x0020; X += 0x0002) {
$80/87F1 A9 55 55    LDA #$5555              ;
-:
$80/87F4 95 00       STA $00,x               ;     $00[X] = 0x5555
$80/87F6 95 20       STA $20,x               ;     $20[X] = 0x5555
$80/87F8 E8          INX                     ;
$80/87F9 E8          INX                     ;
$80/87FA E0 20 00    CPX #$0020              ;
$80/87FD D0 F5       BNE -                   ; }
$80/87FF E2 20       SEP #$20                ; $0000A0 = 0x80
$80/8801 A9 80       LDA #$80                ;
$80/8803 8F A0 00 00 STA $0000A0             ;
$80/8807 8F 9E 00 00 STA $00009E             ; $00009E = 0x80
$80/880B 9C 9D 00    STZ $009D               ; $009D = 0x00
$80/880E 2B          PLD                     ; pld()
$80/880F 6B          RTL                     ;


$80/8810 0B          PHD                     ; phd()
$80/8811 8B          PHB                     ; phb()
$80/8812 C2 20       REP #$20                ; D = 0x0000
$80/8814 A9 00 00    LDA #$0000              ;
$80/8817 5B          TCD                     ;
$80/8818 E2 30       SEP #$30                ; B = 0x80
$80/881A A9 80       LDA #$80                ;
$80/881C 48          PHA                     ;
$80/881D AB          PLB                     ;
$80/881E A9 80       LDA #$80                ; if($4E & 0x80) {
$80/8820 24 4E       BIT $4E                 ;
$80/8822 F0 09       BEQ +                   ;
$80/8824 14 41       TRB $41                 ;     $41 &= 0x7F
$80/8826 A9 03       LDA #$03                ;     $98 = 0x03
$80/8828 85 98       STA $98                 ;     $8316()
$80/882A 20 16 83    JSR $8316               ; }
+:
$80/882D AB          PLB                     ; plb()
$80/882E 2B          PLD                     ; pld()
$80/882F 6B          RTL                     ;


$80/8830 0B          PHD                     ; phd()
$80/8831 8B          PHB                     ; phb()
$80/8832 C2 20       REP #$20                ; D = 0x0000
$80/8834 A9 00 00    LDA #$0000              ;
$80/8837 5B          TCD                     ;
$80/8838 E2 20       SEP #$20                ; B = 0x80
$80/883A A9 80       LDA #$80                ;
$80/883C 48          PHA                     ;
$80/883D AB          PLB                     ;
-:
$80/883E A5 9B       LDA $9B                 ; do { 
$80/8840 C9 80       CMP #$80                ;     if($9B == 0x80) {
$80/8842 D0 09       BNE +                   ;         goto +
$80/8844 A5 4E       LDA $4E                 ;     }
$80/8846 29 80       AND #$80                ; } while(!($4E & 0x80))
$80/8848 F0 F4       BEQ -                   ;
$80/884A 20 46 85    JSR $8546               ; $8546()
+:
$80/884D E2 30       SEP #$30                ; +:
$80/884F E6 9C       INC $9C                 ; ++$9C
$80/8851 A5 9B       LDA $9B                 ; X = $9B
$80/8853 AA          TAX                     ;
$80/8854 18          CLC                     ; $9B += 0x08
$80/8855 69 08       ADC #$08                ;
$80/8857 85 9B       STA $9B                 ;
$80/8859 AB          PLB                     ; plb()
$80/885A 2B          PLD                     ; pld()
$80/885B 6B          RTL                     ;


$80/885C 0B          PHD                     ; phd()
$80/885D 8B          PHB                     ; phb()
$80/885E C2 30       REP #$30                ;
$80/8860 48          PHA                     ;
$80/8861 A9 00 00    LDA #$0000              ; D = 0x0000
$80/8864 5B          TCD                     ;
$80/8865 E2 30       SEP #$30                ; B = 0x80
$80/8867 A9 80       LDA #$80                ;
$80/8869 48          PHA                     ;
$80/886A AB          PLB                     ;
$80/886B C2 20       REP #$20                ;
$80/886D 68          PLA                     ; $5E[X] = A.lo
$80/886E E2 20       SEP #$20                ;
$80/8870 95 5E       STA $5E,x               ;
$80/8872 20 64 86    JSR $8664               ; $8664()
$80/8875 AB          PLB                     ; plb()
$80/8876 2B          PLD                     ; pld()
$80/8877 6B          RTL                     ;


sound_command:
$80/8878 0B          PHD                     ; phd()
$80/8879 8B          PHB                     ; phb()
$80/887A C2 20       REP #$20                ; D = 0x0000
$80/887C A9 00 00    LDA #$0000              ;
$80/887F 5B          TCD                     ;
$80/8880 E2 20       SEP #$20                ; B = 0x80
$80/8882 A9 80       LDA #$80                ;
$80/8884 48          PHA                     ;
$80/8885 AB          PLB                     ;
$80/8886 C2 10       REP #$10                ;
-:
$80/8888 AD 40 21    LDA $2140               ; while(APUIO0 >= 0)
$80/888B 10 FB       BPL -                   ;
$80/888D A5 B3       LDA $B3                 ; APUIO2 = $B3
$80/888F 8D 42 21    STA $2142               ;
$80/8892 C9 08       CMP #$08                ;
$80/8894 F0 04       BEQ ++                  ; if(($B3 == 0x08) || ($B3 == 0x09)) {
$80/8896 C9 09       CMP #$09                ;
$80/8898 D0 07       BNE +                   ;
++:
$80/889A A5 B6       LDA $B6                 ;     APUIO3 = $B6
$80/889C 8D 43 21    STA $2143               ;
$80/889F 80 18       BRA ++                  ; } else {
+:
$80/88A1 C9 03       CMP #$03                ;     if($B3 == 0x03) {
$80/88A3 D0 07       BNE +                   ;
$80/88A5 A5 B4       LDA $B4                 ;         APUIO3 = $B4
$80/88A7 8D 43 21    STA $2143               ;
$80/88AA 80 0D       BRA ++                  ;     } else {
+:
$80/88AC C9 04       CMP #$04                ;         if(($B3 == 0x04) || ($B3 == 0x06)) {
$80/88AE F0 04       BEQ +                   ;
$80/88B0 C9 06       CMP #$06                ;             APUIO3 = $B5
$80/88B2 D0 05       BNE ++                  ;         }
+:
$80/88B4 A5 B5       LDA $B5                 ;     }
$80/88B6 8D 43 21    STA $2143               ; }
++:
$80/88B9 A9 80       LDA #$80                ; APUIO0 = 0x80
$80/88BB 8D 40 21    STA $2140               ;
-:
$80/88BE AD 40 21    LDA $2140               ; while(APUIO0 < 0)
$80/88C1 30 FB       BMI -                   ;
$80/88C3 A9 00       LDA #$00                ; APUIO0 == 0x00
$80/88C5 8D 40 21    STA $2140               ; 
$80/88C8 A5 B3       LDA $B3                 ; if($B3 == 0x01) {
$80/88CA C9 01       CMP #$01                ;
$80/88CC F0 04       BEQ label               ;
$80/88CE 5C 55 89 80 JMP +done               ;
label:
$80/88D2 AD 40 21    LDA $2140               ;     while(APUIO >= 0)
$80/88D5 10 FB       BPL label               ;
$80/88D7 C2 20       REP #$20                ;     APUIO2 = (*$B7)[0x0000]
$80/88D9 A0 00 00    LDY #$0000              ;
$80/88DC B7 B7       LDA [$B7],y             ;
$80/88DE 8D 42 21    STA $2142               ;
$80/88E1 E2 20       SEP #$20                ;     APUIO0 = 0x80
$80/88E3 A9 80       LDA #$80                ;
$80/88E5 8D 40 21    STA $2140               ;
-:
$80/88E8 AD 40 21    LDA $2140               ;     while(APUIO0 < 0)
$80/88EB 30 FB       BMI -                   ;
$80/88ED A9 00       LDA #$00                ;     APUIO0 = 0x00
$80/88EF 8D 40 21    STA $2140               ;
-:
$80/88F2 AD 40 21    LDA $2140               ;     while(APUIO0 >= 0)
$80/88F5 10 FB       BPL -                   ;
$80/88F7 C2 20       REP #$20                ;     APUIO2 = (*$B7)[0x0002]
$80/88F9 A0 02 00    LDY #$0002              ;
$80/88FC B7 B7       LDA [$B7],y             ;
$80/88FE 8D 42 21    STA $2142               ;
$80/8901 4A          LSR A                   ;     $BA = (*$B7)[0x0002] >> 1
$80/8902 85 BA       STA $BA                 ;
$80/8904 90 02       BCC +                   ;     if((*B7)[0x0002] & 0x01) {
$80/8906 E6 BA       INC $BA                 ;         ++$BA
+:
$80/8908 E2 20       SEP #$20                ;     }
$80/890A A9 80       LDA #$80                ;     APUIO0 = 0x80
$80/890C 8D 40 21    STA $2140               ;
-:
$80/890F AD 40 21    LDA $2140               ;     while(APUIO0 < 0)
$80/8912 30 FB       BMI -                   ;
$80/8914 A9 00       LDA #$00                ;     APUIO0 == 0x00
$80/8916 8D 40 21    STA $2140               ;
$80/8919 C2 20       REP #$20                ;     $BC = (*$B7)[0x0004]
$80/891B A0 04 00    LDY #$0004              ;
$80/891E B7 B7       LDA [$B7],y             ;
$80/8920 85 BC       STA $BC                 ;
$80/8922 E2 20       SEP #$20                ;     $BE = (*$B7)[0x0006]
$80/8924 A0 06 00    LDY #$0006              ;
$80/8927 B7 B7       LDA [$B7],y             ;
$80/8929 85 BE       STA $BE                 ;
$80/892B A0 00 00    LDY #$0000              ;     Y = 0x0000
--:
$80/892E C2 20       REP #$20                ;     do {
$80/8930 B7 BC       LDA [$BC],y             ;         X = (*$BC)[Y]
$80/8932 C8          INY                     ;         Y += 0x0002
$80/8933 C8          INY                     ;
$80/8934 AA          TAX                     ;
$80/8935 E2 20       SEP #$20                ;
-:
$80/8937 AD 40 21    LDA $2140               ;         while(APUIO0 >= 0)
$80/893A 10 FB       BPL -                   ;
$80/893C 8E 42 21    STX $2142               ;         APUIO2 = X
$80/893F A9 80       LDA #$80                ;         APUIO0 = 0x80
$80/8941 8D 40 21    STA $2140               ;
-:
$80/8944 AD 40 21    LDA $2140               ;         while(APUIO0 < 0)
$80/8947 30 FB       BMI -                   ;
$80/8949 A9 00       LDA #$00                ;         APUIO0 = 0x00
$80/894B 8D 40 21    STA $2140               ;
$80/894E A6 BA       LDX $BA                 ;     } while(--$BA)
$80/8950 CA          DEX                     ;
$80/8951 86 BA       STX $BA                 ;
$80/8953 D0 D9       BNE --                  ; }
+done:
$80/8955 AB          PLB                     ; plb()
$80/8956 2B          PLD                     ; pld()
$80/8957 6B          RTL                     ;


sound_driver:
$80/8958
0x0862 // driver size
0x0800 // aram base address
                                    E8 10 C5 F1
00 E8 65 C5 F6 00 E8 87 C5 F7 00 20 CD EF BD CD
00 F5 D2 0F FD 3D F5 D2 0F 3D 3F 8E 0A C8 22 90
F0 E8 2A C5 FA 00 E8 01 C5 F1 00 E8 00 5D AF C8
E0 90 FB 8D 04 E8 00 DA 10 8F 10 13 8D 00 E8 00
D7 10 3F B8 08 6E 13 F4 E8 80 C5 F4 00 C4 04 E8
00 C5 F5 00 C4 05 60 E5 FD 00 28 0F 84 02 C4 02
68 32 90 F3 8F 00 02 E8 2A 3F E8 0C 8D 6C E8 12
3F 8E 0A C4 00 3F C1 08 F8 18 3E 19 F0 05 3F F6
08 2F F5 E4 02 D0 09 E5 FD 00 28 0F C4 02 2F 0C
E4 24 D0 06 3F EA 0A 3F C1 0A 8B 02 E4 03 D0 09
E5 FE 00 28 0F C4 03 2F 09 E4 24 D0 03 3F F8 0A
8B 03 2F C1 8D 00 E8 40 7A 10 DA 10 6F EC F5 00
7E 06 F0 0C 3F EF 08 F0 28 E8 04 CB 06 3F E1 08
E5 F4 00 10 1C 3F EF 08 F0 17 3F 36 09 F8 18 D5
00 02 3D DD D5 00 02 3D D8 18 6F F8 18 3D 3D 3E
19 6F 3F 1D 09 1C 5D C8 18 B0 1B 1F 02 09 1A 09
56 09 77 09 7A 09 B5 09 16 0A 2D 0A 0B 0A AD 0A
B5 0A 46 0A 4A 0A 5F 00 08 F8 19 3E 18 F0 0E F5
00 02 2D 3D F5 00 02 FD AE 3D D8 19 6F E5 F4 00
10 FB E5 F6 00 EC F7 00 2D E4 04 28 7F C5 F4 00
C4 04 E5 F4 00 30 FB E4 04 08 80 C5 F4 00 C4 04
AE 6F 3F 1D 09 DA D0 3F 1D 09 DA D2 3F 1D 09 CD
00 C7 D0 3A D0 1A D2 F0 09 DD C7 D0 3A D0 1A D2
D0 EA 6F 5F 00 08 DD 5D C5 F5 00 C4 05 1C 8D 00
DA D0 98 00 D1 EC 01 11 E5 00 11 7A D0 DA D2 8D
00 F7 D2 C4 D0 FC F7 D2 C4 D1 8D 06 E8 00 DA 10
8F 08 13 3F E4 09 3F B8 08 3A D0 3A D0 6E 13 F3
6F 6D 3F 2D 0A EE DD 5D 1C 8D 00 DA D0 98 00 D1
EC 03 11 E5 02 11 7A D0 DA D0 8D 04 E8 00 DA 10
8F 08 13 8D 00 F7 10 10 0C 3F B8 08 6E 13 F4 6F
4D 3F 64 0A CE 8D 00 F6 F4 0F D7 10 FC AD 1A 90
F6 8D 0C 7D D7 10 8D 00 F7 D0 8D 02 D7 10 8D 01
F7 D0 8D 03 D7 10 6F 8D 04 E8 00 DA 10 8F 10 13
2F 09 8D 06 E8 00 DA 10 8F 08 13 3F 64 0A 3F B8
08 3A D0 3A D0 6E 13 F3 6F DD 5D 8D 04 E8 00 DA
10 8F 08 13 7D 8D 0C 77 10 F0 25 3F B8 08 6E 13
F3 6F 8F 00 24 6F 8D 04 E8 00 DA 10 8F 10 13 3F
72 0A 3F B8 08 3A D0 3A D0 6E 13 F3 8F FF 24 6F
8D 00 F7 10 5D E8 00 D7 10 C8 C0 B0 0F 6F 8D 00
F7 10 5D 28 9F D7 10 C8 C0 B0 01 6F 8D 0B F7 10
5D E8 00 D4 C0 F5 0E 10 8D 5C CC F2 00 C5 F3 00
6F 2D DD 04 09 C5 F2 00 AE C5 F3 00 6F 3F 80 0A
8D 00 F7 10 28 9F D7 10 6F 8F 01 20 8F 00 23 2F
06 8F FF 20 8F FF 23 CB 22 8F 00 21 6F E4 22 F0
16 60 84 21 C4 21 90 0F 60 E4 20 84 23 D0 06 E3
20 05 8F 00 22 C4 23 6F 03 17 0A EB 22 F0 06 3F
34 0E 3F 42 0E 6F 8D 04 E8 00 DA 10 8F 08 13 8F
FF 17 2F 0C 8D 06 E8 00 DA 10 8F 08 13 8F 00 17
8D 5C E8 00 3F 8E 0A 8D 00 F7 10 C4 12 F3 12 3A
D3 12 20 B3 12 07 28 DF D7 10 3F DB 0D 8D 06 F7
10 F0 0A 9C D7 10 D0 05 3F A1 0A 2F 06 3F 97 0F
3F DC 0A 8D 04 F7 10 D0 0E 8D 00 F7 10 C4 12 F3
12 08 3F 55 0B 2F EC 9C D7 10 3F B8 08 6E 13 B7
6F 3F C1 08 8D 02 F7 10 C4 14 FC F7 10 C4 15 8D
00 F7 14 30 09 8F 00 16 8D 01 F7 10 2F 0B 8F 01
16 68 C0 90 04 8D 01 D7 10 68 CF 90 03 5F 75 0D
68 B1 B0 12 A8 7F 78 01 1F F0 04 5D F5 30 10 8D
05 D7 10 5F AB 0B 1C 5D 1F 59 0B D7 10 AB 16 8D
05 F7 10 8D 04 D7 10 8D 00 E4 16 7A 14 6D 8D 02
D7 10 FC AE D7 10 6F 64 0A 19 0C 00 0C 2B 0C AB
0B AB 0B A3 0B 44 0C 6E 0C 77 0C 8E 0C BB 0C A3
0B F7 0B 6C 0D D0 0C F3 0C 25 0D 1A 0D 59 0D 62
0D A3 0B 57 0C A3 0B A3 0B A3 0B A3 0B A3 0B A3
0B A3 0B EB 16 F7 14 C4 1F 5F A1 0B 8D 0F F7 10
9C 9C D7 10 FD 60 E4 16 BC BC 84 14 D7 10 FC E8
00 84 15 D7 10 EB 16 F7 14 2D FC F7 14 FD AE DA
14 8F 00 16 5F AB 0B 8D 0F F7 10 68 40 B0 F5 2D
BC BC D7 10 EE F7 10 C4 14 FC F7 10 C4 15 2F E1
EB 16 F7 14 28 0F C4 D8 8D 00 F7 10 28 F0 04 D8
5F 9F 0B EB 16 F7 14 1C 9F 2D 28 0F 80 A8 08 8D
18 D7 10 AE 28 E0 8D 19 2F 12 EB 16 F7 14 1C 8D
14 2F 09 EB 16 F7 14 80 A8 40 8D 0A D7 10 D3 12
06 3F 34 0E 3F A7 0E 5F A1 0B EB 16 F7 14 8D 2C
3F 8E 0A 8D 3C 3F 8E 0A AB 16 EB 16 F7 14 68 04
90 02 E8 04 8D 7D 3F 8E 0A AB 16 EB 16 F7 14 8D
0D 3F 8E 0A 5F A1 0B EB 16 F7 14 F0 02 E8 10 C4
D8 8D 00 F7 10 28 EF 04 D8 5F 9F 0B 03 17 12 E8
01 C5 F1 00 EB 16 F7 14 5D 8D 13 E8 88 9E 3F E8
0C 5F A1 0B C5 FB 00 C4 01 E8 03 C5 F1 00 6F EB
16 F7 14 3F FD 0C 5F A1 0B 8D 06 CF DA D0 8D 3E
E8 00 7A D0 DA D0 CD 00 8D 1A E7 D0 3A D0 D7 10
FC AD 20 90 F5 6F EB 16 F7 14 1C 8D 13 D7 10 2F
0C EB 16 F7 14 8D 12 D7 10 8D 13 F7 10 C4 D0 48
FF C4 D1 8D 12 F7 10 2D EB D0 CF DD 8D 10 D7 10
AE EB D1 CF DD 8D 11 D7 10 D3 12 06 3F 34 0E 3F
42 0E 5F A1 0B EB 16 F7 14 8D 0E 5F 9F 0B EB 16
F7 14 1C 8D 15 5F 9F 0B D3 12 03 3F A1 0A 5F A3
0B 80 A8 D0 8D 08 D7 10 8F 00 D8 EB 16 F7 14 30
21 68 31 B0 0D 03 D8 1A 02 D8 AB 16 8D 07 D7 10
2F E9 23 D8 0D 22 D8 AB 16 80 A8 31 8D 09 D7 10
2F D9 8D 07 F7 10 78 01 1F F0 04 5D F5 30 10 8D
06 D7 10 3F C1 08 C3 12 1B 3F 4F 0F 30 16 8D 0B
D7 10 8D 00 F7 10 08 60 D7 10 3F 34 0E 8D 5C E4
0A 3F 8E 0A 5F A3 0B 3F 34 0E 3F 42 0E 13 12 07
8D 08 F7 10 3F FD 0C 3F 8F 0E 3F C1 08 8D 08 F7
10 10 0D E4 0A 04 07 C4 07 8D 3D 3F 8E 0A 2F 15
13 12 02 E8 24 3F AB 0E 8D 3D E4 0A 48 FF 24 07
C4 07 3F 8E 0A E4 0A 93 12 04 04 08 2F 04 48 FF
24 08 C4 08 8D 4D 3F 8E 0A 8D 4C E4 0A 5F 8E 0A
8D 0B F7 10 5D 9F C4 09 F5 0E 10 C4 0A 6F 8D 10
F7 10 C4 D6 8D 11 F7 10 C4 D7 03 17 14 E4 22 F0
10 E4 D6 EB 23 CF DD C4 D6 E4 D7 EB 23 CF DD C4
D7 CD 32 8D 09 F7 10 2D EB D6 CF 9E 10 02 E8 7F
C4 D6 AE EB D7 CF 9E 10 02 E8 7F C4 D7 8D 00 E4
D6 3F 95 0A 8D 01 E4 D7 5F 95 0A 8F 1A D8 8F 04
D9 EB D8 F7 10 EB D9 3F 95 0A AB D8 AB D9 AD 07
90 EF 6F 8D 08 F7 10 60 88 18 60 8D 0A 97 10 60
8D 16 97 10 60 8D 18 97 10 1C 8D 00 CD 18 9E 5D
F6 17 10 C4 D1 F6 16 10 C4 D0 F6 19 10 2D F6 18
10 EE 9A D0 C4 D2 8D 14 F7 10 8F 00 D3 60 8D 17
97 10 98 00 D3 60 8D 19 97 10 98 00 D3 EB D2 CF
6D BA D2 CF 7A D0 DA D0 AE 8D 00 7A D0 DA D0 0B
D0 2B D1 C8 08 B0 07 4B D1 6B D0 3D 2F F5 3F C1
08 8D 1E F7 10 C4 D3 FC F7 10 C4 D2 E4 D2 EB D1
CF DA D4 E4 D2 EB D0 CF 6D E4 D3 EB D0 CF 7A D4
DA D4 E4 D3 EB D1 CF FD AE 7A D4 DA D4 8D 02 E4
D4 3F 95 0A 8D 03 E4 D5 5F 95 0A 13 17 04 8D 7F
2F 02 EB 13 CD 00 CB D8 8F FF D9 F4 C0 F0 12 64
D8 B0 04 C4 D8 D8 D9 3D C8 08 90 EF F8 D9 10 05
6F DB C0 7D 6F DB C0 E8 08 80 A4 D8 8D 40 CF DA
D0 8D 06 E8 00 7A D0 DA D0 8D 00 F7 D0 28 9F D7
D0 7D 6F 3F C1 08 8D 0E F7 10 60 8D 0D 97 10 D7
10 1C 90 02 48 FF C4 D0 8D 15 F7 10 F0 1F C4 D1
5C C4 D2 BA D0 CF DD 8D 00 CB D3 9A D2 6D 8D 17
D7 10 AE 8D 16 D7 10 3F 34 0E 3F A7 0E 6F 6C F2
6D DF 7D 04 5D 3C 2D 00 0C 7F 1C 7F 2C 00 3C 00
0F 7F 1F 00 2F 00 3F 00 4F 00 5F 00 6F 00 7F 00
80 00 00 00 00 00 00 00 00 32 00 00 00 00 00 40
7F 7F 7F 80 80 00 00 00 00 00 01 02 04 08 10 20
40 80 5F 08 DE 08 65 09 F4 09 8C 0A 2C 0B D6 0B
8B 0C 4A 0D 14 0E EA 0E CD 0F BE 10 00 01 02 03
04 05 06 07 08 09 0A 0B 0C 0E 10 12 14 16 18 1A
1C 1E 20 22 24 26 28 2A 2C 2E 30 3C 40 48 50 54
60 6C 70 78 80 84 90 9C A0 A8 B0 B4 C0 CF
0x0000 // sound_boot_loader end code
0x0800 // aram sound driver start address


$80/91C2 78          SEI                     ; I = 1
$80/91C3 E2 20       SEP #$20                ; $0048 &= 0x7F
$80/91C5 AD 48 00    LDA $0048  [$80:0048]   ;
$80/91C8 29 7F       AND #$7F                ;
$80/91CA 8D 48 00    STA $0048  [$80:0048]   ;
$80/91CD 8F 00 42 00 STA $004200[$00:4200]   ; NMITIMEN = $0048
$80/91D1 E2 20       SEP #$20                ; $0006 &= 0xFE
$80/91D3 AD 06 00    LDA $0006  [$80:0006]   ;
$80/91D6 29 FE       AND #$FE                ;
$80/91D8 8D 06 00    STA $0006  [$80:0006]   ;
$80/91DB 8F 33 21 00 STA $002133[$00:2133]   ; SETINI = $0006
$80/91DF E2 20       SEP #$20                ; $0006 &= 0xFB
$80/91E1 AD 06 00    LDA $0006  [$80:0006]   ;
$80/91E4 29 FB       AND #$FB                ;
$80/91E6 8D 06 00    STA $0006  [$80:0006]   ;
$80/91E9 8F 33 21 00 STA $002133[$00:2133]   ; SETINI = $0006
$80/91ED E2 20       SEP #$20                ; $0006 &= 0xF7
$80/91EF AD 06 00    LDA $0006  [$80:0006]   ;
$80/91F2 29 F7       AND #$F7                ;
$80/91F4 8D 06 00    STA $0006  [$80:0006]   ;
$80/91F7 8F 33 21 00 STA $002133[$00:2133]   ; SETINI = $0006
$80/91FB E2 20       SEP #$20                ; $0045 = 0x30
$80/91FD A9 30       LDA #$30                ;
$80/91FF 8D 45 00    STA $0045  [$80:0045]   ;
$80/9202 A9 00       LDA #$00                ; $0046 = 0x00
$80/9204 8D 46 00    STA $0046  [$80:0046]   ;
$80/9207 E2 20       SEP #$20                ; $0000 = $0000 & 0xF0 | 0x02
$80/9209 AD 00 00    LDA $0000  [$80:0000]   ;
$80/920C 29 F0       AND #$F0                ;
$80/920E 09 02       ORA #$02                ;
$80/9210 8D 00 00    STA $0000  [$80:0000]   ;
$80/9213 8F 05 21 00 STA $002105[$00:2105]   ; BGMODE = $0000
$80/9217 E2 20       SEP #$20                ; $0000 = $0000 & 0x0F | 0x00 // wtf is this shit?
$80/9219 AD 00 00    LDA $0000  [$80:0000]   ;
$80/921C 29 0F       AND #$0F                ;
$80/921E 09 00       ORA #$00                ;
$80/9220 8D 00 00    STA $0000  [$80:0000]   ;
$80/9223 8F 05 21 00 STA $002105[$00:2105]   ; BGMODE = $0000 // seriously?
$80/9227 C2 20       REP #$20                ; $0043 = 0x0000
$80/9229 A9 00 00    LDA #$0000              ;
$80/922C 8D 43 00    STA $0043  [$80:0043]   ;
$80/922F E2 20       SEP #$20                ; $0042 = $0042 & 0x1F | 0x60
$80/9231 AD 42 00    LDA $0042  [$80:0042]   ;
$80/9234 29 1F       AND #$1F                ;
$80/9236 09 60       ORA #$60                ;
$80/9238 8D 42 00    STA $0042  [$80:0042]   ;
$80/923B AD 06 00    LDA $0006  [$80:0006]   ; $0006 = $0006 & 0xFD | 0x00
$80/923E 29 FD       AND #$FD                ;
$80/9240 09 00       ORA #$00                ;
$80/9242 8D 06 00    STA $0006  [$80:0006]   ;
$80/9245 8F 33 21 00 STA $002133[$00:2133]   ; SETINI = $0006 // they must have been smoking the good stuff
$80/9249 C2 20       REP #$20                ; $00A3 = 0xFFF1
$80/924B A9 F1 FF    LDA #$FFF1              ;
$80/924E 8D A3 00    STA $00A3  [$80:00A3]   ;
$80/9251 A9 E1 FF    LDA #$FFE1              ; $00A5 = 0xFFE1
$80/9254 8D A5 00    STA $00A5  [$80:00A5]   ;
$80/9257 E2 30       SEP #$30                ; $0001 = 0x01
$80/9259 A9 01       LDA #$01                ;
$80/925B 8D 01 00    STA $0001  [$80:0001]   ;
$80/925E 8F 07 21 00 STA $002107[$00:2107]   ; BG1SC = 0x01
$80/9262 C2 20       REP #$20                ; $0002 = 0x09 // ok, this asm is getting ridiculous
$80/9264 E2 30       SEP #$30                ;
$80/9266 A9 09       LDA #$09                ;
$80/9268 8D 02 00    STA $0002  [$80:0002]   ;
$80/926B 8F 08 21 00 STA $002108[$00:2108]   ; BG2SC = 0x09
$80/926F C2 20       REP #$20                ; $0003 = 0x11
$80/9271 E2 30       SEP #$30                ;
$80/9273 A9 11       LDA #$11                ;
$80/9275 8D 03 00    STA $0003  [$80:0003]   ;
$80/9278 8F 09 21 00 STA $002109[$00:2109]   ; BG3SC = 0x11
$80/927C C2 20       REP #$20                ; $0004 = 0x19
$80/927E E2 30       SEP #$30                ;
$80/9280 A9 19       LDA #$19                ;
$80/9282 8D 04 00    STA $0004  [$80:0004]   ;
$80/9285 8F 0A 21 00 STA $00210A[$00:210A]   ; BG4SC = 0x19
$80/9289 C2 20       REP #$20                ; $0020 = 0x00 // like, pants on head stupid
$80/928B E2 20       SEP #$20                ;
$80/928D A9 00       LDA #$00                ;
$80/928F 8D 20 00    STA $0020  [$80:0020]   ;
$80/9292 A9 00       LDA #$00                ; $0022 = 0x00
$80/9294 8D 22 00    STA $0022  [$80:0022]   ;
$80/9297 A9 10       LDA #$10                ; $0003 = 0x10
$80/9299 8D 03 00    STA $0003  [$80:0003]   ;
$80/929C 8F 09 21 00 STA $002109[$00:2109]   ; BG3SC = 0x10 // they can't seem to decide what they want
$80/92A0 C2 20       REP #$20                ; BG12NBA = 0x4444
$80/92A2 A9 44 44    LDA #$4444              ;
$80/92A5 8F 0B 21 00 STA $00210B[$00:210B]   ;
$80/92A9 A9 00 40    LDA #$4000              ; $000D = 0x4000
$80/92AC 8D 0D 00    STA $000D  [$80:000D]   ;
$80/92AF A9 00 40    LDA #$4000              ; $000F = 0x4000
$80/92B2 8D 0F 00    STA $000F  [$80:000F]   ;
$80/92B5 A9 00 40    LDA #$4000              ; $0011 = 0x4000
$80/92B8 8D 11 00    STA $0011  [$80:0011]   ;
$80/92BB A9 00 40    LDA #$4000              ; $0013 = 0x4000
$80/92BE 8D 13 00    STA $0013  [$80:0013]   ;
$80/92C1 E2 20       SEP #$20                ; $0042 = $0042 & 0x60 | 0x01
$80/92C3 AD 42 00    LDA $0042  [$80:0042]   ;
$80/92C6 29 60       AND #$60                ;
$80/92C8 09 01       ORA #$01                ;
$80/92CA 8D 42 00    STA $0042  [$80:0042]   ;
$80/92CD C2 20       REP #$20                ; $0009 = 0x2000
$80/92CF A9 00 20    LDA #$2000              ;
$80/92D2 8D 09 00    STA $0009  [$80:0009]   ;
$80/92D5 A9 00 30    LDA #$3000              ; $000B = 0x3000
$80/92D8 8D 0B 00    STA $000B  [$80:000B]   ;
$80/92DB C2 30       REP #$30                ; D = 0x0700
$80/92DD A9 00 07    LDA #$0700              ;
$80/92E0 5B          TCD                     ;
$80/92E1 9C 82 07    STZ $0782  [$80:0782]   ; $0782 = 0x0000
$80/92E4 9C 84 07    STZ $0784  [$80:0784]   ; $0784 = 0x0000
$80/92E7 E2 30       SEP #$30                ; B = 0x80
$80/92E9 A9 80       LDA #$80                ;
$80/92EB 48          PHA                     ;
$80/92EC AB          PLB                     ;
$80/92ED 9C 81 07    STZ $0781  [$80:0781]   ; $0781 = 0x00
$80/92F0 A9 00       LDA #$00                ; D = 0x0700 // cool, i guess
$80/92F2 5B          TCD                     ;
$80/92F3 20 5C BA    JSR $BA5C  [$80:BA5C]   ; $BA5C()
$80/92F6 22 D2 93 80 JSL $8093D2[$80:93D2]   ; $8093D2()
$80/92FA 58          CLI                     ; I = 0
$80/92FB E2 20       SEP #$20                ; $0048 |= 0x80
$80/92FD AD 48 00    LDA $0048  [$80:0048]   ;
$80/9300 09 80       ORA #$80                ;
$80/9302 8D 48 00    STA $0048  [$80:0048]   ;
$80/9305 8F 00 42 00 STA $004200[$00:4200]   ; NMITIMEN = $0048
$80/9309 C2 30       REP #$30                ; D = 0x1800
$80/930B A9 00 18    LDA #$1800              ;
$80/930E 5B          TCD                     ;
$80/930F E2 20       SEP #$20                ; B = 0x80
$80/9311 A9 80       LDA #$80                ;
$80/9313 48          PHA                     ;
$80/9314 AB          PLB                     ;
$80/9315 5C 9E BE 80 JMP $80BE9E[$80:BE9E]   ; jmp $80BE9E()


$80/9364 C2 30       REP #$30                ;
$80/9366 48          PHA                     ; pha()
$80/9367 DA          PHX                     ; phx()
$80/9368 20 8E 93    JSR $938E  [$80:938E]   ; $938E()
$80/936B 22 31 87 80 JSL $808731[$80:8731]   ; $808731()
$80/936F E2 30       SEP #$30                ; $009D -= $009E
$80/9371 38          SEC                     ;
$80/9372 AD 9D 00    LDA $009D  [$80:009D]   ;
$80/9375 ED 9E 00    SBC $009E  [$80:009E]   ;
$80/9378 8D 9D 00    STA $009D  [$80:009D]   ;
$80/937B 8D 8A 07    STA $078A  [$80:078A]   ; $078A = $009D
$80/937E 22 DB 86 80 JSL $8086DB[$80:86DB]   ; $8086DB()
$80/9382 20 D4 B2    JSR $B2D4  [$80:B2D4]   ; $B2D4()
$80/9385 22 6D 87 80 JSL $80876D[$80:876D]   ; $80876D()
$80/9389 C2 30       REP #$30                ;
$80/938B FA          PLX                     ; plx()
$80/938C 68          PLA                     ; pla()
$80/938D 6B          RTL                     ;


$80/938E 0B          PHD                     ; phd()
$80/938F 8B          PHB                     ; phb()
$80/9390 C2 30       REP #$30                ; D = 0x0700
$80/9392 A9 00 07    LDA #$0700              ;
$80/9395 5B          TCD                     ;
$80/9396 A5 77       LDA $77    [$00:0777]   ; $7F = $77
-:
$80/9398 85 7F       STA $7F    [$00:077F]   ;
$80/939A C9 77 07    CMP #$0777              ; if($77 == 0x07777) {
$80/939D D0 03       BNE +                   ;     plb()
$80/939F AB          PLB                     ;     pld()
$80/93A0 2B          PLD                     ;     return
$80/93A1 60          RTS                     ; }
+:
$80/93A2 0B          PHD                     ; phd()
$80/93A3 5B          TCD                     ; D = $77
$80/93A4 A5 04       LDA $04    [$00:1704]   ; $0774 = $04
$80/93A6 8D 74 07    STA $0774  [$80:0774]   ;
$80/93A9 E2 20       SEP #$20                ; $0776 = $06
$80/93AB A5 06       LDA $06    [$00:1706]   ;
$80/93AD 8D 76 07    STA $0776  [$80:0776]   ;
$80/93B0 A5 07       LDA $07    [$00:1707]   ; B = $07
$80/93B2 48          PHA                     ;
$80/93B3 AB          PLB                     ;
$80/93B4 22 CF 93 80 JSL $8093CF[$80:93CF]   ; C = $8093CF()
$80/93B8 C2 30       REP #$30                ; ++$09
$80/93BA E6 09       INC $09    [$00:1709]   ;
$80/93BC A5 00       LDA $00    [$00:1700]   ; A = $00
$80/93BE 2B          PLD                     ; pld()
$80/93BF 90 D7       BCC -                   ; if(!C) goto -
$80/93C1 48          PHA                     ; pha()
$80/93C2 A6 7F       LDX $7F    [$00:077F]   ; X = $7F
$80/93C4 20 5A 94    JSR $945A  [$80:945A]   ; $945A()
$80/93C7 A6 7F       LDX $7F    [$00:077F]   ; X = $7F
$80/93C9 20 48 94    JSR $9448  [$80:9448]   ; $9448()
$80/93CC 68          PLA                     ; pla()
$80/93CD 80 C9       BRA -                   ; goto -


$80/93CF DC 74 07    JML [$0774][$80:9E44]   ; jmp (*$0774)()


$80/93D2 0B          PHD                     ; phd()
$80/93D3 C2 30       REP #$30                ; D = 0x0700
$80/93D5 A9 00 07    LDA #$0700              ;
$80/93D8 5B          TCD                     ;
$80/93D9 A9 77 07    LDA #$0777              ; $77 = 0x0777
$80/93DC 85 77       STA $77    [$00:0777]   ;
$80/93DE 85 79       STA $79    [$00:0779]   ; $79 = 0x0777
$80/93E0 A9 7B 07    LDA #$077B              ; $7B = 0x077B
$80/93E3 85 7B       STA $7B    [$00:077B]   ;
$80/93E5 85 7D       STA $7D    [$00:077D]   ; $7D = 0x077D
$80/93E7 A9 00 08    LDA #$0800              ; for(A = 0x0800; A != 0x1800; A += 0x0040) {
-:
$80/93EA 48          PHA                     ;     pha()
$80/93EB AA          TAX                     ;     X = A
$80/93EC 20 48 94    JSR $9448  [$80:9448]   ;     $9448()
$80/93EF 68          PLA                     ;     pla()
$80/93F0 18          CLC                     ;
$80/93F1 69 40 00    ADC #$0040              ;
$80/93F4 C9 00 18    CMP #$1800              ;
$80/93F7 D0 F1       BNE -                   ; }
$80/93F9 22 E7 87 80 JSL $8087E7[$80:87E7]   ; $8087E7()
$80/93FD 2B          PLD                     ; pld()
$80/93FE 6B          RTL                     ;


$80/93FF C2 10       REP #$10                ;
$80/9401 E2 20       SEP #$20                ;
$80/9403 0B          PHD                     ; phd()
$80/9404 F4 00 07    PEA $0700               ; D = 0x0700
$80/9407 2B          PLD                     ;
$80/9408 9B          TXY                     ; Y = X
$80/9409 A6 7B       LDX $7B    [$00:077B]   ; X = $7B
$80/940B E0 7B 07    CPX #$077B              ; if(X == 0x077B) {
$80/940E F0 36       BEQ +                   ;
$80/9410 9D 06 00    STA $0006,x[$80:1706]   ;     $0006[X] = A
$80/9413 8B          PHB                     ;     $0007[X] = B
$80/9414 68          PLA                     ;
$80/9415 9D 07 00    STA $0007,x[$80:1707]   ;
$80/9418 9E 08 00    STZ $0008,x[$80:1708]   ;     $0008[X] = 0x00
$80/941B C2 20       REP #$20                ;     $0004[X] = Y
$80/941D 98          TYA                     ;
$80/941E 9D 04 00    STA $0004,x[$80:1704]   ;
$80/9421 9E 09 00    STZ $0009,x[$80:1709]   ;     $0009[X] = 0x0000
$80/9424 DA          PHX                     ;     phx()
$80/9425 20 5A 94    JSR $945A  [$80:945A]   ;     $945A()
$80/9428 FA          PLX                     ;     plx()
$80/9429 DA          PHX                     ;     phx()
$80/942A AC 79 07    LDY $0779  [$80:0779]   ;     Y = $0779
$80/942D 20 69 94    JSR $9469  [$80:9469]   ;     $9469()
$80/9430 68          PLA                     ;     pla()
$80/9431 18          CLC                     ;     Y = A + 0x0008
$80/9432 69 0B 00    ADC #$000B              ;
$80/9435 A8          TAY                     ;
$80/9436 68          PLA                     ;     pla()
$80/9437 48          PHA                     ;     pha()
$80/9438 18          CLC                     ;     X = A + 0x000B
$80/9439 69 0B 00    ADC #$000B              ;
$80/943C AA          TAX                     ;
$80/943D A9 34 00    LDA #$0034              ;     A = 0x0034
$80/9440 8B          PHB                     ;     phb()
$80/9441 54 00 00    MVN 00 00               ;     mvn(0x00, 0x00) // X == src, Y == dest, A == size - 1, src bank == dest bank == 0x00
$80/9444 AB          PLB                     ;     plb()
$80/9445 18          CLC                     ;     C = 0
+:
$80/9446 2B          PLD                     ; }
$80/9447 6B          RTL                     ; pld()


$80/9448 8A          TXA                     ; Y = (X & 0x00FF) ? $077D : 0x077B
$80/9449 89 FF 00    BIT #$00FF              ;
$80/944C F0 05       BEQ +else               ;
$80/944E AC 7D 07    LDY $077D  [$80:077D]   ;
$80/9451 80 03       BRA +if                 ;
+else:
$80/9453 A0 7B 07    LDY #$077B              ;
+if:
$80/9456 20 69 94    JSR $9469  [$80:9469]   ; $9469()
$80/9459 60          RTS                     ;


$80/945A BC 02 00    LDY $0002,x[$80:1702]   ; Y = $0002[X]
$80/945D BD 00 00    LDA $0000,x[$80:1700]   ; A = $0000[X]
$80/9460 AA          TAX                     ; X = A
$80/9461 99 00 00    STA $0000,y[$80:077B]   ; $0000[Y] = A
$80/9464 98          TYA                     ; $0002[X] = Y
$80/9465 9D 02 00    STA $0002,x[$80:1602]   ;
$80/9468 60          RTS                     ;


$80/9469 98          TYA                     ; $0002[X] = Y
$80/946A 9D 02 00    STA $0002,x[$80:0802]   ;
$80/946D B9 00 00    LDA $0000,y[$80:077B]   ; $0000[X] = $0000[Y]
$80/9470 9D 00 00    STA $0000,x[$80:0800]   ;
$80/9473 8A          TXA                     ; A = X
$80/9474 BE 00 00    LDX $0000,y[$80:077B]   ; X = $0000[Y]
$80/9477 99 00 00    STA $0000,y[$80:077B]   ; $0000[Y] = A
$80/947A 9D 02 00    STA $0002,x[$80:077D]   ; $0002[X] = A
$80/947D 60          RTS                     ;


-:
$80/947E E2 30       SEP #$30                ; for(;;) {
$80/9480 B2 0B       LDA ($0B)  [$80:BFC8]   ;     X = *$0B * 2
$80/9482 0A          ASL A                   ;
$80/9483 AA          TAX                     ;     ($949D[X])()
$80/9484 FC 9D 94    JSR ($949D,x)[$80:9BDB] ;     A = X
$80/9487 AA          TAX                     ;     if(A == 0x0000) {
$80/9488 D0 01       BNE +                   ;         break
$80/948A 6B          RTL                     ;     }
+:
$80/948B C2 21       REP #$21                ;     $0B += (A < 0) ? A | 0xFF00 : A & 0x00FF
$80/948D 10 05       BPL +else               ;
$80/948F 09 00 FF    ORA #$FF00              ;
$80/9492 80 03       BRA +if                 ;
+else:
$80/9494 29 FF 00    AND #$00FF              ;
+if:
$80/9497 65 0B       ADC $0B    [$00:180B]   ;
$80/9499 85 0B       STA $0B    [$00:180B]   ;
$80/949B 80 E1       BRA -                   ; }


$80/953D A2 00       LDX #$00                ; for(X = 0x00; X != 0x16; ++X) {
-:
$80/953F 74 0D       STZ $0D,x  [$00:180D]   ;     $0D[X] = 0x00
$80/9541 E8          INX                     ;
$80/9542 E0 16       CPX #$16                ;
$80/9544 D0 F9       BNE -                   ; }
$80/9546 A9 01       LDA #$01                ; A = 0x01
$80/9548 60          RTS                     ;


$80/9549 A0 01       LDY #$01                ; Y = 0x01
$80/954B B1 0B       LDA ($0B),y[$80:C26E]   ; $0D  = (*$0B)[Y]
$80/954D 85 0D       STA $0D    [$00:180D]   ;
$80/954F A9 02       LDA #$02                ; A = 0x01
$80/9551 60          RTS                     ;


$80/9552 C2 20       REP #$20                ;
$80/9554 A0 01       LDY #$01                ; Y = 0x01
$80/9556 B1 0B       LDA ($0B),y[$80:C295]   ; $0E = (*$0B)[Y]
$80/9558 85 0E       STA $0E    [$00:140E]   ;
$80/955A E2 30       SEP #$30                ; A = 0x03
$80/955C A9 03       LDA #$03                ;
$80/955E 60          RTS                     ;


$80/955F A0 01       LDY #$01                ; Y = 0x01
$80/9561 B1 0B       LDA ($0B),y[$80:C298]   ; $10 = (*$0B)[Y]
$80/9563 85 10       STA $10    [$00:1410]   ;
$80/9565 A9 02       LDA #$02                ; A = 0x02
$80/9567 60          RTS                     ;


$80/9568 C2 30       REP #$30                ; A = $0B
$80/956A A5 0B       LDA $0B    [$00:180B]   ;
$80/956C 48          PHA                     ; pha()
$80/956D A0 01 00    LDY #$0001              ; Y = 0x0001
$80/9570 B1 0B       LDA ($0B),y[$80:C28F]   ; $0B = (*$0B)[Y]
$80/9572 85 0B       STA $0B    [$00:180B]   ;
$80/9574 A2 7E 94    LDX #$947E              ; X = 0x947E
$80/9577 E2 20       SEP #$20                ; A = 0x80
$80/9579 A9 80       LDA #$80                ;
$80/957B 22 FF 93 80 JSL $8093FF[$80:93FF]   ; $8093FF()
$80/957F C2 30       REP #$30                ;
$80/9581 68          PLA                     ; pla()
$80/9582 85 0B       STA $0B    [$00:180B]   ; $0B = A
$80/9584 E2 30       SEP #$30                ; A = 0x03
$80/9586 A9 03       LDA #$03                ;
$80/9588 60          RTS                     ;


$80/95A1 A0 03       LDY #$03                ; $000776 = (*$0B)[0x03]
$80/95A3 B1 0B       LDA ($0B),y[$80:C45D]   ;
$80/95A5 8F 76 07 00 STA $000776[$00:0776]   ;
$80/95A9 C2 30       REP #$30                ;
$80/95AB A0 01 00    LDY #$0001              ; Y = 0x0001
$80/95AE B1 0B       LDA ($0B),y[$80:C45B]   ; $000774 = (*$0B)[Y]
$80/95B0 8F 74 07 00 STA $000774[$00:0774]   ;
$80/95B4 22 BD 95 80 JSL $8095BD[$80:95BD]   ; $8095BD()
$80/95B8 E2 30       SEP #$30                ; A = 0x04
$80/95BA A9 04       LDA #$04                ;
$80/95BC 60          RTS                     ;


$80/95BD DC 74 07    JML [$0774][$80:C497]   ; jmp *$0774


$80/95C0 C2 10       REP #$10                ; X = 0x9CF8
$80/95C2 A2 F8 9C    LDX #$9CF8              ;
$80/95C5 A9 80       LDA #$80                ; A = 0x80
$80/95C7 22 FF 93 80 JSL $8093FF[$80:93FF]   ; $8093FF()
$80/95CB E2 30       SEP #$30                ; A = 0x08
$80/95CD A9 08       LDA #$08                ;
$80/95CF 60          RTS                     ;

$80/95D0 C2 10       REP #$10                ; X = 0x9E44
$80/95D2 A2 44 9E    LDX #$9E44              ;
$80/95D5 A9 80       LDA #$80                ; A = 0x80
$80/95D7 22 FF 93 80 JSL $8093FF[$80:93FF]   ; $8093FF()
$80/95DB E2 30       SEP #$30                ; A = 0x05
$80/95DD A9 05       LDA #$05                ;
$80/95DF 60          RTS                     ;


$80/9653 A0 01       LDY #$01                ; Y = 0x01
$80/9655 E2 20       SEP #$20                ; $00B5 = (*$0B)[Y]
$80/9657 B1 0B       LDA ($0B),y[$80:C479]   ;
$80/9659 8D B5 00    STA $00B5  [$80:00B5]   ;
$80/965C A9 04       LDA #$04                ; $00B3 = 0x04
$80/965E 8D B3 00    STA $00B3  [$80:00B3]   ;
$80/9661 22 78 88 80 JSL $808878[$80:8878]   ; $808878()
$80/9665 E2 30       SEP #$30                ; A = 0x02
$80/9667 A9 02       LDA #$02                ;
$80/9669 60          RTS                     ;


$80/966A 20 41 B0    JSR $B041  [$80:B041]   ; $B041()
$80/966D E2 30       SEP #$30                ; A = 0x04
$80/966F A9 04       LDA #$04                ;
$80/9671 60          RTS                     ;


$80/9742 C2 30       REP #$30                ; X = $0B
$80/9744 A6 0B       LDX $0B    [$00:140B]   ;
$80/9746 BD 01 00    LDA $0001,x[$80:C2AE]   ; $15 = $0001[X]
$80/9749 85 15       STA $15    [$00:1415]   ;
$80/974B BD 03 00    LDA $0003,x[$80:C2B0]   ; $19 = $0003[X]
$80/974E 85 19       STA $19    [$00:1419]   ;
$80/9750 64 13       STZ $13    [$00:1413]   ; $13 = 0x0000
$80/9752 64 17       STZ $17    [$00:1417]   ; $17 = 0x0000
$80/9754 E2 30       SEP #$30                ; A = 0x05
$80/9756 A9 05       LDA #$05                ;
$80/9758 60          RTS                     ;


$80/9759 A0 01       LDY #$01                ; X = (*$0B)[0x01]
$80/975B B1 0B       LDA ($0B),y[$80:C301]   ;
$80/975D AA          TAX                     ;
$80/975E C8          INY                     ; $00[X] = (*$0B)[0x02]
$80/975F B1 0B       LDA ($0B),y[$80:C302]   ; 
$80/9761 95 00       STA $00,x  [$00:1423]   ;
$80/9763 A9 03       LDA #$03                ; A = 0x03
$80/9765 60          RTS                     ;


$80/9766 A0 01       LDY #$01                ; X = (*$0B)[0x01]
$80/9768 B1 0B       LDA ($0B),y[$80:C39E]   ;
$80/976A AA          TAX                     ;
$80/976B C8          INY                     ;
$80/976C C2 20       REP #$20                ; $00[X] = (*$0B)[0x02]
$80/976E B1 0B       LDA ($0B),y[$80:C39F]   ;
$80/9770 95 00       STA $00,x  [$00:1423]   ;
$80/9772 E2 30       SEP #$30                ; A = 0x04
$80/9774 A9 04       LDA #$04                ;
$80/9776 60          RTS                     ;


$80/9777 C2 30       REP #$30                ; X = (*$0B)[0x0002]
$80/9779 A0 02 00    LDY #$0002              ;
$80/977C B1 0B       LDA ($0B),y[$80:C30E]   ;
$80/977E AA          TAX                     ;
$80/977F E2 20       SEP #$20                ; A = $0000[X]
$80/9781 BD 00 00    LDA $0000,x[$80:1B5B]   ;
$80/9784 48          PHA                     ; pha()
$80/9785 E2 30       SEP #$30                ; X = (*$0B)[0x01]
$80/9787 A0 01       LDY #$01                ;
$80/9789 B1 0B       LDA ($0B),y[$80:C30D]   ;
$80/978B AA          TAX                     ;
$80/978C 68          PLA                     ; pla()
$80/978D 95 00       STA $00,x  [$00:1423]   ; $00[X] = A
$80/978F A9 04       LDA #$04                ; A = 0x04
$80/9791 60          RTS                     ;


$80/97AF A0 01       LDY #$01                ; X = (*$0B)[0x01]
$80/97B1 B1 0B       LDA ($0B),y[$80:C304]   ;
$80/97B3 AA          TAX                     ;
$80/97B4 B5 00       LDA $00,x  [$00:1423]   ; A = $00[X]
$80/97B6 48          PHA                     ; pha()
$80/97B7 C2 30       REP #$30                ; X = (*$0B)[0x0002]
$80/97B9 A0 02 00    LDY #$0002              ;
$80/97BC B1 0B       LDA ($0B),y[$80:C305]   ;
$80/97BE AA          TAX                     ;
$80/97BF E2 20       SEP #$20                ;
$80/97C1 68          PLA                     ; pla()
$80/97C2 9D 00 00    STA $0000,x[$80:1B5B]   ; $0000[X] = A
$80/97C5 E2 30       SEP #$30                ; A = 0x04
$80/97C7 A9 04       LDA #$04                ;
$80/97C9 60          RTS                     ;


$80/97CA A0 01       LDY #$01                ; X = (*$0B)[0x01]
$80/97CC B1 0B       LDA ($0B),y[$80:C3A2]   ;
$80/97CE AA          TAX                     ;
$80/97CF C2 30       REP #$30                ; A = $00[X]
$80/97D1 B5 00       LDA $00,x  [$00:1423]   ;
$80/97D3 48          PHA                     ; pha()
$80/97D4 A0 02 00    LDY #$0002              ; X = (*$0B)[0x0002]
$80/97D7 B1 0B       LDA ($0B),y[$80:C3A3]   ;
$80/97D9 AA          TAX                     ;
$80/97DA 68          PLA                     ; pla()
$80/97DB 9D 00 00    STA $0000,x[$80:001A]   ; A = $0000[X]
$80/97DE E2 30       SEP #$30                ; A = 0x04
$80/97E0 A9 04       LDA #$04                ;
$80/97E2 60          RTS                     ;


$80/97F5 A0 01       LDY #$01                ; X = (*$0B)[0x01]
$80/97F7 B1 0B       LDA ($0B),y[$80:C3A8]   ;
$80/97F9 AA          TAX                     ;
$80/97FA F6 00       INC $00,x  [$00:1423]   ; ++($00[X])
$80/97FC A9 02       LDA #$02                ; A = 0x02
$80/97FE 60          RTS                     ;


$80/9857 A0 02       LDY #$02                ; X = (*$0B)[0x02]
$80/9859 B1 0B       LDA ($0B),y[$80:C312]   ;
$80/985B AA          TAX                     ;
$80/985C C8          INY                     ; A = (*$0B)[0x0003]
$80/985D B1 0B       LDA ($0B),y[$80:C313]   ;
$80/985F D5 00       CMP $00,x  [$00:1423]   ; A = (A == $00[X])? 0x04 : (*$0B)[0x01]
$80/9861 D0 45       BNE +                   ;
$80/9863 A9 04       LDA #$04                ;
$80/9865 60          RTS                     ; return


$80/9890 A0 02       LDY #$02                ; X = (*$0B)[0x02]
$80/9892 B1 0B       LDA ($0B),y[$80:C3AB]   ;
$80/9894 AA          TAX                     ;
$80/9895 B5 00       LDA $00,x  [$00:1423]   ; A = (A == $00[X])? 0x03 : (*$0B)[0x01]
$80/9897 D0 0F       BNE $0F    [$98A8]      ;
$80/9899 A9 03       LDA #$03                ;
$80/989B 60          RTS                     ; return


$80/989C A0 02       LDY #$02                ; X = (*$0B)[0x02]
$80/989E B1 0B       LDA ($0B),y[$80:C462]   ;
$80/98A0 AA          TAX                     ;
$80/98A1 D6 00       DEC $00,x  [$00:1624]   ; A = (--($00[X]) == 0x00)? 0x03 : (*$B0)[0x01]
$80/98A3 D0 03       BNE $03    [$98A8]      ;
$80/98A5 A9 03       LDA #$03                ;
$80/98A7 60          RTS                     ;
+:
$80/98A8 A0 01       LDY #$01                ;
$80/98AA B1 0B       LDA ($0B),y[$80:C311]   ;
$80/98AC 60          RTS                     ; return


$80/98BB A5 11       LDA $11    [$00:1411]   ; if($11 == 0x00) {
$80/98BD D0 08       BNE +                   ;
$80/98BF A0 01       LDY #$01                ;     $11 = (*$0B)[0x01]
$80/98C1 B1 0B       LDA ($0B),y[$80:C2BC]   ;
$80/98C3 85 11       STA $11    [$00:1411]   ;
$80/98C5 80 07       BRA ++                  ; } else {
+
$80/98C7 C6 11       DEC $11    [$00:1411]   ;     if(--$11 == 0x00) {
$80/98C9 D0 03       BNE ++                  ;         A = 0x02
$80/98CB A9 02       LDA #$02                ;         return
$80/98CD 60          RTS                     ;     }
++
$80/98CE A9 00       LDA #$00                ; }
$80/98D0 18          CLC                     ; A = 0x00
$80/98D1 60          RTS                     ; C = 0


$80/991F A9 00       LDA #$00                ; A = 0x00
$80/9921 38          SEC                     ; C = 1
$80/9922 60          RTS                     ;


$80/9BDB C2 20       REP #$20                ; $00B7 = $0B + 0x0001
$80/9BDD A5 0B       LDA $0B    [$00:180B]   ;
$80/9BDF 1A          INC A                   ;
$80/9BE0 8D B7 00    STA $00B7  [$80:00B7]   ;
$80/9BE3 E2 20       SEP #$20                ; $00B9 = B
$80/9BE5 8B          PHB                     ;
$80/9BE6 68          PLA                     ;
$80/9BE7 8D B9 00    STA $00B9  [$80:00B9]   ;
$80/9BEA A9 01       LDA #$01                ; $00B3 = 0x01
$80/9BEC 8D B3 00    STA $00B3  [$80:00B3]   ;
$80/9BEF 22 78 88 80 JSL $808878[$80:8878]   ; sound_command()
$80/9BF3 E2 30       SEP #$30                ; A = 0x08
$80/9BF5 A9 08       LDA #$08                ;
$80/9BF7 60          RTS                     ;


$80/9BF8 A0 01       LDY #$01                ; $00B4 = (*$B0)[0x01]
$80/9BFA E2 20       SEP #$20                ;
$80/9BFC B1 0B       LDA ($0B),y[$80:C531]   ;
$80/9BFE 8D B4 00    STA $00B4  [$80:00B4]   ;
$80/9C01 A9 03       LDA #$03                ; $00B3 = 0x03
$80/9C03 8D B3 00    STA $00B3  [$80:00B3]   ;
$80/9C06 22 78 88 80 JSL $808878[$80:8878]   ; sound_command()
$80/9C0A E2 30       SEP #$30                ; A = 0x02
$80/9C0C A9 02       LDA #$02                ;
$80/9C0E 60          RTS                     ;


$80/9C0F E2 20       SEP #$20                ; $00B4 = 0x00
$80/9C11 9C B4 00    STZ $00B4  [$80:00B4]   ;
$80/9C14 A9 05       LDA #$05                ; $00B3 = 0x05
$80/9C16 8D B3 00    STA $00B3  [$80:00B3]   ;
$80/9C19 22 78 88 80 JSL $808878[$80:8878]   ; sound_command()
$80/9C1D E2 30       SEP #$30                ; A = 0x01
$80/9C1F A9 01       LDA #$01                ;
$80/9C21 60          RTS                     ;


$80/9C22 A0 01       LDY #$01                ; $00B6 = (*$0B)[0x01]
$80/9C24 E2 20       SEP #$20                ;
$80/9C26 B1 0B       LDA ($0B),y[$80:C344]   ;
$80/9C28 8D B6 00    STA $00B6  [$80:00B6]   ;
$80/9C2B A9 08       LDA #$08                ; $00B3 = 0x08
$80/9C2D 8D B3 00    STA $00B3  [$80:00B3]   ;
$80/9C30 22 78 88 80 JSL $808878[$80:8878]   ; sound_command()
$80/9C34 E2 30       SEP #$30                ; A = 0x02
$80/9C36 A9 02       LDA #$02                ;
$80/9C38 60          RTS                     ;


$80/9C39 A0 01       LDY #$01                ; $00B6 = (*$0B)[0x01]
$80/9C3B E2 20       SEP #$20                ;
$80/9C3D B1 0B       LDA ($0B),y[$80:C33F]   ;
$80/9C3F 8D B6 00    STA $00B6  [$80:00B6]   ;
$80/9C42 A9 09       LDA #$09                ; $00B3 = 0x09
$80/9C44 8D B3 00    STA $00B3  [$80:00B3]   ;
$80/9C47 22 78 88 80 JSL $808878[$80:8878]   ; sound_command()
$80/9C4B E2 30       SEP #$30                ; A = 0x02
$80/9C4D A9 02       LDA #$02                ;
$80/9C4F 60          RTS                     ;


$80/9CF8 E2 30       SEP #$30                ; if($08) {
$80/9CFA A5 08       LDA $08    [$00:1608]   ;
$80/9CFC F0 03       BEQ +                   ;
$80/9CFE 4C 86 9D    JMP +jump               ;
+:
$80/9D01 E6 08       INC $08    [$00:1608]   ;     ++$08
$80/9D03 C2 20       REP #$20                ;     $23 = (*$0B)[0x01]
$80/9D05 A0 01       LDY #$01                ;
$80/9D07 B1 0B       LDA ($0B),y[$80:C275]   ;
$80/9D09 85 23       STA $23    [$00:1623]   ;
$80/9D0B A0 03       LDY #$03                ;     $25 = (*$0B)[0x03]
$80/9D0D B1 0B       LDA ($0B),y[$80:C277]   ;
$80/9D0F 85 25       STA $25    [$00:1625]   ;
$80/9D11 A0 06       LDY #$06                ;     $27 = (*$0B)[0x06]
$80/9D13 B1 0B       LDA ($0B),y[$80:C27A]   ;
$80/9D15 85 27       STA $27    [$00:1627]   ;
$80/9D17 E2 20       SEP #$20                ;     A = (*$0B)[0x05]
$80/9D19 A0 05       LDY #$05                ;
$80/9D1B B1 0B       LDA ($0B),y[$80:C279]   ;
$80/9D1D 48          PHA                     ;     B = A
$80/9D1E AB          PLB                     ;
$80/9D1F 85 07       STA $07    [$00:1607]   ;     $07 = A
$80/9D21 A5 0D       LDA $0D    [$00:160D]   ;     Y = $0D * 2
$80/9D23 0A          ASL A                   ;
$80/9D24 A8          TAY                     ;
$80/9D25 AD 00 00    LDA $0000  [$85:0000]   ;     X = (($0000 & 0x07) * 8) + $0D
$80/9D28 29 07       AND #$07                ;
$80/9D2A 0A          ASL A                   ;
$80/9D2B 0A          ASL A                   ;
$80/9D2C 0A          ASL A                   ;
$80/9D2D 18          CLC                     ;
$80/9D2E 65 0D       ADC $0D    [$00:160D]   ;
$80/9D30 AA          TAX                     ;
$80/9D31 BF 04 9E 80 LDA $809E04,x[$80:9E17] ;     A = $809E04[X]
$80/9D35 AA          TAX                     ;     X = A
$80/9D36 D0 1C       BNE ++                  ;     if(A == 0x00) {
$80/9D38                                     ;         ???
++:
$80/9D54 C2 20       REP #$20                ;     }
$80/9D56 A5 0E       LDA $0E    [$00:160E]   ;     for(A = $0E + $23; X != 0x00; --X) {
$80/9D58 18          CLC                     ;
$80/9D59 65 23       ADC $23    [$00:1623]   ;
-:
$80/9D5B 0A          ASL A                   ;         A <<= 1
$80/9D5C CA          DEX                     ;
$80/9D5D D0 FC       BNE -                   ;     }
$80/9D5F 18          CLC                     ;     $23 = A + $0007[Y]
$80/9D60 79 07 00    ADC $0007,y[$85:000D]   ;
$80/9D63 85 23       STA $23    [$00:1623]   ;
$80/9D65 B2 25       LDA ($25)  [$85:FBB3]   ;     $29 = *$25 / 8
$80/9D67 4A          LSR A                   ;
$80/9D68 4A          LSR A                   ;
$80/9D69 4A          LSR A                   ;
$80/9D6A 85 29       STA $29    [$00:1629]   ;
$80/9D6C A5 25       LDA $25    [$00:1625]   ;     $25 += 0x0002
$80/9D6E 1A          INC A                   ;
$80/9D6F 1A          INC A                   ;
$80/9D70 85 25       STA $25    [$00:1625]   ;
$80/9D72 64 2B       STZ $2B    [$00:162B]   ;     $2B = 0x0000
$80/9D74 A5 27       LDA $27    [$00:1627]   ;     A = $27
$80/9D76 D0 04       BNE ++                  ;     if(A  == 0x00) {
$80/9D78 A5 29       LDA $29    [$00:1629]   ;         A = $29
$80/9D7A 85 27       STA $27    [$00:1627]   ;         $27 = A
++:
$80/9D7C C9 80 02    CMP #$0280              ;     }
$80/9D7F 90 05       BCC +jump               ;     if(A >= 0x0280) {
$80/9D81 A9 80 02    LDA #$0280              ;         A = 0x0280
$80/9D84 85 27       STA $27    [$00:1727]   ;     }
+jump
$80/9D86 C2 30       REP #$30                ; }
$80/9D88 A5 29       LDA $29    [$00:1629]   ; A = ($29 >= $27)? $27 : $29
$80/9D8A C5 27       CMP $27    [$00:1627]   ;
$80/9D8C 90 02       BCC +                   ;
$80/9D8E A5 27       LDA $27    [$00:1627]   ;
+:
$80/9D90 48          PHA                     ; pha()
$80/9D91 0A          ASL A                   ; $2F = A * 8
$80/9D92 0A          ASL A                   ;
$80/9D93 0A          ASL A                   ;
$80/9D94 85 2F       STA $2F    [$00:162F]   ;
$80/9D96 C2 20       REP #$20                ; A = $0015
$80/9D98 AD 15 00    LDA $0015  [$85:0015]   ;
$80/9D9B 48          PHA                     ; pha()
$80/9D9C 8F 81 21 00 STA $002181[$00:2181]   ; WMADD.lohi = A
$80/9DA0 18          CLC                     ; $0015 = A + $2F
$80/9DA1 65 2F       ADC $2F    [$00:162F]   ;
$80/9DA3 8D 15 00    STA $0015  [$85:0015]   ;
$80/9DA6 E2 20       SEP #$20                ; WMADD.bank = 0x01
$80/9DA8 A9 01       LDA #$01                ;
$80/9DAA 8F 83 21 00 STA $002183[$00:2183]   ;
$80/9DAE C2 20       REP #$20                ;
$80/9DB0 68          PLA                     ; pla()
$80/9DB1 85 2D       STA $2D    [$00:162D]   ; $2D = A
$80/9DB3 68          PLA                     ; pla()
$80/9DB4 A8          TAY                     ; Y = A
$80/9DB5 49 FF FF    EOR #$FFFF              ; $29 -= A
$80/9DB8 38          SEC                     ;
$80/9DB9 65 29       ADC $29    [$00:1629]   ;
$80/9DBB 85 29       STA $29    [$00:1629]   ;
$80/9DBD A6 25       LDX $25    [$00:1625]   ; X = $25
$80/9DBF A5 2B       LDA $2B    [$00:162B]   ; A = $2B
$80/9DC1 22 49 B3 80 JSL $80B349[$80:B349]   ; $80B349()
$80/9DC5 85 2B       STA $2B    [$00:162B]   ; $2B = A
$80/9DC7 86 25       STX $25    [$00:1625]   ; $25 = X
$80/9DC9 22 30 88 80 JSL $808830[$80:8830]   ; $808830()
$80/9DCD A9 80       LDA #$80                ; $05C0[X] = 0x80
$80/9DCF 9D C0 05    STA $05C0,x[$85:05C0]   ;
$80/9DD2 A9 7F       LDA #$7F                ; $05C1[X] = 0x7F
$80/9DD4 9D C1 05    STA $05C1,x[$85:05C1]   ;
$80/9DD7 C2 20       REP #$20                ; $05C2[X] = $2D
$80/9DD9 A5 2D       LDA $2D    [$00:162D]   ;
$80/9DDB 9D C2 05    STA $05C2,x[$85:05C2]   ;
$80/9DDE A5 23       LDA $23    [$00:1623]   ; $05C4[X] = $23
$80/9DE0 9D C4 05    STA $05C4,x[$85:05C4]   ;
$80/9DE3 A5 2F       LDA $2F    [$00:162F]   ; A = $2F
$80/9DE5 C9 01 14    CMP #$1401              ; while(A >= 0x1401) // extremely unusual, somehow nmi must break the loop
-wait:
$80/9DE8 B0 FE       BCS -wait               ;
$80/9DEA 9D C6 05    STA $05C6,x[$85:05C6]   ; $05C6[X] = A
$80/9DED E2 20       SEP #$20                ; $009C = 0x00
$80/9DEF 9C 9C 00    STZ $009C  [$85:009C]   ;
$80/9DF2 C2 20       REP #$20                ; $23 += $2F * 2
$80/9DF4 A5 2F       LDA $2F    [$00:162F]   ;
$80/9DF6 4A          LSR A                   ;
$80/9DF7 18          CLC                     ;
$80/9DF8 65 23       ADC $23    [$00:1623]   ;
$80/9DFA 85 23       STA $23    [$00:1623]   ;
$80/9DFC A5 29       LDA $29    [$00:1629]   ; C = ($29 != 0x00)? 0 : 1
$80/9DFE F0 02       BEQ +                   ;
$80/9E00 18          CLC                     ;
$80/9E01 6B          RTL                     ;
+:
$80/9E02 38          SEC                     ;
$80/9E03 6B          RTL                     ;


$80/9E44 E2 30       SEP #$30                ; if($08 == 0x00) {
$80/9E46 A5 08       LDA $08    [$00:1708]   ;
$80/9E48 D0 67       BNE +                   ;
$80/9E4A A0 04       LDY #$04                ;     $0A = (*$0B)[0x04]
$80/9E4C B1 0B       LDA ($0B),y[$80:C273]   ;
$80/9E4E 85 0A       STA $0A    [$00:170A]   ;
$80/9E50 A0 01       LDY #$01                ;     WRMPYA = (*$0B)[0x01] + $10
$80/9E52 18          CLC                     ;
$80/9E53 B1 0B       LDA ($0B),y[$80:C270]   ;
$80/9E55 65 10       ADC $10    [$00:1710]   ;
$80/9E57 8F 02 42 00 STA $004202[$00:4202]   ;
$80/9E5B AD 00 00    LDA $0000  [$80:0000]   ;     X = ($0000 & 0x07) * 8 + $0D
$80/9E5E 29 07       AND #$07                ;
$80/9E60 0A          ASL A                   ;
$80/9E61 0A          ASL A                   ;
$80/9E62 0A          ASL A                   ;
$80/9E63 65 0D       ADC $0D    [$00:170D]   ;
$80/9E65 AA          TAX                     ;
$80/9E66 BF A6 A0 80 LDA $80A0A6,x[$80:A0B9] ;     A = $80A0A6[X]
$80/9E6A D0 1A       BNE ++                  ;     if(A == 0x00) {
$80/9E6C                                     ;         ???
++:
$80/9E86 8F 03 42 00 STA $004203[$00:4203]   ;     }
$80/9E8A 85 0D       STA $0D    [$00:170D]   ;     $0D = WRMPYB = A
$80/9E8C BF 66 A0 80 LDA $80A066,x[$80:A079] ;     $0E = (($80A066[X] & 0x00FF) + RDMPY) * 2
$80/9E90 C2 20       REP #$20                ;
$80/9E92 29 FF 00    AND #$00FF              ;
$80/9E95 18          CLC                     ;
$80/9E96 6F 16 42 00 ADC $004216[$00:4216]   ;
$80/9E9A 0A          ASL A                   ;
$80/9E9B 85 0E       STA $0E    [$00:170E]   ;
$80/9E9D A0 02       LDY #$02                ;     $0B = (*$0B)[0x02] - $0E
$80/9E9F 38          SEC                     ;
$80/9EA0 B1 0B       LDA ($0B),y[$80:C271]   ;
$80/9EA2 E5 0E       SBC $0E    [$00:170E]   ;
$80/9EA4 85 0B       STA $0B    [$00:170B]   ;
$80/9EA6 E2 30       SEP #$30                ;     if($0A == 0x00) {
$80/9EA8 A5 0A       LDA $0A    [$00:170A]   ;         goto ++
$80/9EAA F0 2F       BEQ ++                  ;     }
$80/9EAC 64 09       STZ $09    [$00:1309]   ;     $09 = 0x00
$80/9EAE 20 88 9F    JSR $9F88  [$80:9F88]   ;     $9F88()
+:
$80/9EB1 E2 30       SEP #$30                ; }
$80/9EB3 A5 09       LDA $09    [$00:1309]   ; if($09 == $0A) {
$80/9EB5 C5 0A       CMP $0A    [$00:130A]   ;
$80/9EB7 D0 20       BNE +                   ;
$80/9EB9 C6 08       DEC $08    [$00:1308]   ;     if(--$08 == 0x00) {
$80/9EBB F0 1E       BEQ ++                  ;         goto ++
$80/9EBD 9C 07 07    STZ $0707  [$80:0707]   ;     }
-:
$80/9EC0 20 FF 9E    JSR $9EFF  [$80:9EFF]   ;     $0707 = 0x00
$80/9EC3 E2 30       SEP #$30                ;     do {
$80/9EC5 EE 07 07    INC $0707  [$80:0707]   ;         $9EEF()
$80/9EC8 AD 07 07    LDA $0707  [$80:0707]   ;     } while(++$0707 != $0D)
$80/9ECB C5 0D       CMP $0D    [$00:130D]   ;
$80/9ECD D0 F1       BNE -                   ;
$80/9ECF 20 75 9F    JSR $9F75  [$80:9F75]   ;     $9F75()
$80/9ED2 64 09       STZ $09    [$00:1309]   ;     $09 = 0x00
$80/9ED4 A9 01       LDA #$01                ;     $009A = 0x01
$80/9ED6 8D 9A 00    STA $009A  [$80:009A]   ; }
+:
$80/9ED9 18          CLC                     ; C = 0
$80/9EDA 6B          RTL                     ; return
++:
$80/9EDB C2 30       REP #$30                ; ++:
$80/9EDD A5 0E       LDA $0E    [$00:170E]   ; X = $0E
$80/9EDF AA          TAX                     ;
$80/9EE0 18          CLC                     ; Y = $0E + $0B
$80/9EE1 65 0B       ADC $0B    [$00:170B]   ;
$80/9EE3 A8          TAY                     ;
-:
$80/9EE4 C2 20       REP #$20                ; do {
$80/9EE6 B9 00 00    LDA $0000,y[$80:C65C]   ;     $0340[X] = $0000[Y]
$80/9EE9 9D 40 03    STA $0340,x[$80:0340]   ;
$80/9EEC E8          INX                     ;     X += 0x0002
$80/9EED E8          INX                     ;
$80/9EEE C8          INY                     ;     Y += 0x0002
$80/9EEF C8          INY                     ;
$80/9EF0 E2 20       SEP #$20                ; } while(--$0D)
$80/9EF2 C6 0D       DEC $0D    [$00:170D]   ;
$80/9EF4 D0 EE       BNE -                   ;
$80/9EF6 E2 20       SEP #$20                ; $009A = 0x01
$80/9EF8 A9 01       LDA #$01                ;
$80/9EFA 8D 9A 00    STA $009A  [$80:009A]   ;
$80/9EFD 38          SEC                     ; C = 1
$80/9EFE 6B          RTL                     ;


$80/9EFF C2 30       REP #$30                ; $070C = (($0707 * 2) & 0x00FF) + $0E
$80/9F01 A9 00 00    LDA #$0000              ;
$80/9F04 E2 20       SEP #$20                ;
$80/9F06 AD 07 07    LDA $0707  [$80:0707]   ;
$80/9F09 0A          ASL A                   ;
$80/9F0A C2 20       REP #$20                ;
$80/9F0C 18          CLC                     ;
$80/9F0D 65 0E       ADC $0E    [$00:130E]   ;
$80/9F0F 8D 0C 07    STA $070C  [$80:070C]   ;
$80/9F12 A9 00 00    LDA #$0000              ; $070E = ($0707 * 3) & 0x00FF
$80/9F15 E2 20       SEP #$20                ;
$80/9F17 AD 07 07    LDA $0707  [$80:0707]   ;
$80/9F1A 0A          ASL A                   ;
$80/9F1B 18          CLC                     ;
$80/9F1C 6D 07 07    ADC $0707  [$80:0707]   ;
$80/9F1F 8D 0E 07    STA $070E  [$80:070E]   ;
$80/9F22 9C 0F 07    STZ $070F  [$80:070F]   ;
$80/9F25 AA          TAX                     ; X = $10[$070E]
$80/9F26 B5 10       LDA $10,x  [$00:1310]   ; 
$80/9F28 AA          TAX                     ;
$80/9F29 BF E6 A0 80 LDA $80A0E6,x[$80:A16D] ; $0340[$070C] += $80A0E6[X]
$80/9F2D AE 0C 07    LDX $070C  [$80:070C]   ;
$80/9F30 18          CLC                     ;
$80/9F31 7D 40 03    ADC $0340,x[$80:0360]   ;
$80/9F34 9D 40 03    STA $0340,x[$80:0360]   ;
$80/9F37 AE 0E 07    LDX $070E  [$80:070E]   ; X = $11[$070E]
$80/9F3A B5 11       LDA $11,x  [$00:1311]   ;
$80/9F3C AA          TAX                     ;
$80/9F3D BF E6 A0 80 LDA $80A0E6,x[$80:A16D] ; A = ($80A0E6[X] & 0x00FF) * 32
$80/9F41 EB          XBA                     ;
$80/9F42 C2 20       REP #$20                ;
$80/9F44 4A          LSR A                   ;
$80/9F45 4A          LSR A                   ;
$80/9F46 4A          LSR A                   ;
$80/9F47 89 00 10    BIT #$1000              ; if(A & 0x1000) {
$80/9F4A F0 03       BEQ +                   ;
$80/9F4C 09 00 E0    ORA #$E000              ;     A |= 0xE000
+:
$80/9F4F AE 0C 07    LDX $070C  [$80:070C]   ; } 
$80/9F52 18          CLC                     ; $0340[$070C] += A
$80/9F53 7D 40 03    ADC $0340,x[$80:0360]   ;
$80/9F56 9D 40 03    STA $0340,x[$80:0360]   ;
$80/9F59 A9 00 00    LDA #$0000              ;
$80/9F5C E2 20       SEP #$20                ;
$80/9F5E AE 0E 07    LDX $070E  [$80:070E]   ; X = $12[$070E]
$80/9F61 B5 12       LDA $12,x  [$00:1312]   ;
$80/9F63 AA          TAX                     ;
$80/9F64 BF E6 A0 80 LDA $80A0E6,x[$80:A16D] ; $0341[$070C] += $80A0E6[X] * 4
$80/9F68 0A          ASL A                   ;
$80/9F69 0A          ASL A                   ;
$80/9F6A AE 0C 07    LDX $070C  [$80:070C]   ;
$80/9F6D 18          CLC                     ;
$80/9F6E 7D 41 03    ADC $0341,x[$80:0361]   ;
$80/9F71 9D 41 03    STA $0341,x[$80:0361]   ;
$80/9F74 60          RTS                     ;


$80/9F75 E2 30       SEP #$30                ; for(A = $0D, X = 0x00; A; --A, X += 3) {
$80/9F77 A5 0D       LDA $0D    [$00:130D]   ;
$80/9F79 A2 00       LDX #$00                ;
-:
$80/9F7B F6 10       INC $10,x  [$00:1310]   ;     $10[X]++
$80/9F7D F6 11       INC $11,x  [$00:1311]   ;     $11[X]++
$80/9F7F F6 12       INC $12,x  [$00:1312]   ;     $12[X]++
$80/9F81 E8          INX                     ;
$80/9F82 E8          INX                     ;
$80/9F83 E8          INX                     ;
$80/9F84 3A          DEC A                   ;
$80/9F85 D0 F4       BNE -                   ; }
$80/9F87 60          RTS                     ;


$80/9F88 C2 10       REP #$10                ; for($0702 = $0D, $070A = $0E, $070C = 0x0000; $0702; --$0702) {
$80/9F8A E2 20       SEP #$20                ;
$80/9F8C A5 0D       LDA $0D    [$00:130D]   ;
$80/9F8E 8D 02 07    STA $0702  [$80:0702]   ;
$80/9F91 C2 20       REP #$20                ;
$80/9F93 A4 0E       LDY $0E    [$00:130E]   ;
$80/9F95 8C 0A 07    STY $070A  [$80:070A]   ;
$80/9F98 9C 0C 07    STZ $070C  [$80:070C]   ;
-:
$80/9F9B E2 20       SEP #$20                ;     Y = $070A
$80/9F9D AE 0A 07    LDX $070A  [$80:070A]   ;
$80/9FA0 9B          TXY                     ;
$80/9FA1 BD 40 03    LDA $0340,x[$80:0360]   ;     $0708 = $0340[$070A] & 0x1F
$80/9FA4 29 1F       AND #$1F                ;
$80/9FA6 8D 08 07    STA $0708  [$80:0708]   ;
$80/9FA9 B1 0B       LDA ($0B),y[$80:C63C]   ;     $10[$070C] = ((*$0B)[Y] & 0x1F) - $0708
$80/9FAB 29 1F       AND #$1F                ;
$80/9FAD 38          SEC                     ;
$80/9FAE ED 08 07    SBC $0708  [$80:0708]   ;
$80/9FB1 AE 0C 07    LDX $070C  [$80:070C]   ;
$80/9FB4 95 10       STA $10,x  [$00:1310]   ;
$80/9FB6 AE 0A 07    LDX $070A  [$80:070A]   ;     $0708 = $0340[$070A] & 0x03E0
$80/9FB9 C2 20       REP #$20                ;
$80/9FBB BD 40 03    LDA $0340,x[$80:0360]   ;
$80/9FBE 29 E0 03    AND #$03E0              ;
$80/9FC1 8D 08 07    STA $0708  [$80:0708]   ;
$80/9FC4 B1 0B       LDA ($0B),y[$80:C63C]   ;     $11[$070C] = ((*$0B)[Y] & 0x03E0 - $0708) * 8 / 256
$80/9FC6 29 E0 03    AND #$03E0              ;
$80/9FC9 38          SEC                     ;
$80/9FCA ED 08 07    SBC $0708  [$80:0708]   ;
$80/9FCD 0A          ASL A                   ;
$80/9FCE 0A          ASL A                   ;
$80/9FCF 0A          ASL A                   ;
$80/9FD0 E2 20       SEP #$20                ;
$80/9FD2 EB          XBA                     ;
$80/9FD3 AE 0C 07    LDX $070C  [$80:070C]   ;
$80/9FD6 95 11       STA $11,x  [$00:1311]   ;
$80/9FD8 AE 0A 07    LDX $070A  [$80:070A]   ;     $0708 = ($0341[$070A] & 0x7C) / 4
$80/9FDB BD 41 03    LDA $0341,x[$80:0361]   ;
$80/9FDE 29 7C       AND #$7C                ;
$80/9FE0 4A          LSR A                   ;
$80/9FE1 4A          LSR A                   ;
$80/9FE2 8D 08 07    STA $0708  [$80:0708]   ;
$80/9FE5 C8          INY                     ;     ++Y
$80/9FE6 B1 0B       LDA ($0B),y[$80:C63D]   ;     $12[$070C] = ((*$0B)[Y] & 0x7C) / 4 - $0708
$80/9FE8 29 7C       AND #$7C                ;
$80/9FEA 4A          LSR A                   ;
$80/9FEB 4A          LSR A                   ;
$80/9FEC 38          SEC                     ;
$80/9FED ED 08 07    SBC $0708  [$80:0708]   ;
$80/9FF0 AE 0C 07    LDX $070C  [$80:070C]   ;
$80/9FF3 95 12       STA $12,x  [$00:1312]   ;
$80/9FF5 C2 20       REP #$20                ;     $070A += 0x0002
$80/9FF7 18          CLC                     ;
$80/9FF8 AD 0A 07    LDA $070A  [$80:070A]   ;
$80/9FFB 69 02 00    ADC #$0002              ;
$80/9FFE 8D 0A 07    STA $070A  [$80:070A]   ;
$80/A001 18          CLC                     ;     $070C += 0x0003
$80/A002 AD 0C 07    LDA $070C  [$80:070C]   ;
$80/A005 69 03 00    ADC #$0003              ;
$80/A008 8D 0C 07    STA $070C  [$80:070C]   ;
$80/A00B E2 20       SEP #$20                ;
$80/A00D CE 02 07    DEC $0702  [$80:0702]   ;
$80/A010 C2 20       REP #$20                ;
$80/A012 D0 87       BNE -                   ; }
$80/A014 E2 30       SEP #$30                ; X = 0x00
$80/A016 A2 00       LDX #$00                ;
$80/A018 A5 0D       LDA $0D    [$00:130D]   ; Y = A * 2 + $0D
$80/A01A 0A          ASL A                   ;
$80/A01B 18          CLC                     ;
$80/A01C 65 0D       ADC $0D    [$00:130D]   ;
$80/A01E A8          TAY                     ;
$80/A01F A5 0A       LDA $0A    [$00:130A]   ; if($0A & 0x01) {
$80/A021 89 01       BIT #$01                ;
$80/A023 F0 14       BEQ +                   ;
$80/A025 A9 07       LDA #$07                ;     $08 = 0x07
$80/A027 85 08       STA $08    [$00:1308]   ;     do {
-:
$80/A029 B5 10       LDA $10,x  [$00:1310]   ;         $10[X] = (($10[X] >> 2) & 0x17 | 0xC0) + 1
$80/A02B 4A          LSR A                   ;
$80/A02C 4A          LSR A                   ;
$80/A02D 29 17       AND #$17                ;
$80/A02F 09 C0       ORA #$C0                ;
$80/A031 1A          INC A                   ;
$80/A032 95 10       STA $10,x  [$00:1310]   ;
$80/A034 E8          INX                     ;         ++X
$80/A035 88          DEY                     ;     } while(--Y)
$80/A036 D0 F1       BNE -                   ;
$80/A038 60          RTS                     ;
+:
$80/A039 89 02       BIT #$02                ; } else if($0A & 0x02) {
$80/A03B F0 15       BEQ +                   ;
$80/A03D 46 0A       LSR $0A    [$00:130A]   ;     $0A >>= 1
$80/A03F A9 0F       LDA #$0F                ;     $08 = 0x0F
$80/A041 85 08       STA $08    [$00:1308]   ;     do {
-:
$80/A043 B5 10       LDA $10,x  [$00:1310]   ;         $10[X] = (($10[X] >> 1) & 0x2F | 0x80) + 1
$80/A045 4A          LSR A                   ;
$80/A046 29 2F       AND #$2F                ;
$80/A048 09 80       ORA #$80                ;
$80/A04A 1A          INC A                   ;
$80/A04B 95 10       STA $10,x  [$00:1310]   ;
$80/A04D E8          INX                     ;         ++X
$80/A04E 88          DEY                     ;     } while(--Y)
$80/A04F D0 F2       BNE -                   ;
$80/A051 60          RTS                     ; } else {
+:
$80/A052 46 0A       LSR $0A    [$00:160A]   ;     $0A >>= 2
$80/A054 46 0A       LSR $0A    [$00:160A]   ;
$80/A056 A9 1F       LDA #$1F                ;     $08 = 0x1F
$80/A058 85 08       STA $08    [$00:1608]   ;     do {
-:
$80/A05A B5 10       LDA $10,x  [$00:1610]   ;         $10[X] = ($10[X] & 0x5F) + 1
$80/A05C 29 5F       AND #$5F                ;
$80/A05E 1A          INC A                   ;
$80/A05F 95 10       STA $10,x  [$00:1610]   ;
$80/A061 E8          INX                     ;         ++X
$80/A062 88          DEY                     ;     } while(--Y)
$80/A063 D0 F5       BNE -                   ;
$80/A065 60          RTS                     ; }


$80/B041 E2 30       SEP #$30                ; $000700 = (*$0B)[0x01]
$80/B043 A0 03       LDY #$03                ;
$80/B045 B1 0B       LDA ($0B),y[$80:C27F]   ;
$80/B047 8F 02 07 00 STA $000702[$00:0702]   ;
$80/B04B A0 01       LDY #$01                ;
$80/B04D C2 20       REP #$20                ;
$80/B04F B1 0B       LDA ($0B),y[$80:C27D]   ;
$80/B051 8F 00 07 00 STA $000700[$00:0700]   ;
$80/B055 0B          PHD                     ; phd()
$80/B056 A9 00 07    LDA #$0700              ; D = 0x0700
$80/B059 5B          TCD                     ;
$80/B05A E2 20       SEP #$20                ; $03 = WRMPYA = (*$00)[0x00]
$80/B05C A7 00       LDA [$00]  [$85:FBBD]   ;
$80/B05E 8F 02 42 00 STA $004202[$00:4202]   ;
$80/B062 85 03       STA $03    [$00:0703]   ;
$80/B064 A0 01       LDY #$01                ; $04 = WRMPYB = (*$00)[0x01]
$80/B066 B7 00       LDA [$00],y[$85:FBBE]   ;
$80/B068 8F 03 42 00 STA $004203[$00:4203]   ;
$80/B06C 85 04       STA $04    [$00:0704]   ;
$80/B06E A0 03       LDY #$03                ; $05 = (*$00)[0x03]
$80/B070 B7 00       LDA [$00],y[$85:FBC0]   ;
$80/B072 85 05       STA $05    [$00:0705]   ;
$80/B074 C2 20       REP #$20                ; $00 += $0005
$80/B076 18          CLC                     ;
$80/B077 A5 00       LDA $00    [$00:0700]   ;
$80/B079 69 05 00    ADC #$0005              ;
$80/B07C 85 00       STA $00    [$00:0700]   ;
$80/B07E AF 16 42 00 LDA $004216[$00:4216]   ; $06 = RDMPLY * 2
$80/B082 0A          ASL A                   ;
$80/B083 85 06       STA $06    [$00:0706]   ;
$80/B085 C2 20       REP #$20                ; A = $0015
$80/B087 AD 15 00    LDA $0015  [$80:0015]   ;
$80/B08A 48          PHA                     ; pha()
$80/B08B 8F 81 21 00 STA $002181[$00:2181]   ; WMADD.lohi = A
$80/B08F 18          CLC                     ; $0015 = A + $06
$80/B090 65 06       ADC $06    [$00:0706]   ;
$80/B092 8D 15 00    STA $0015  [$80:0015]   ;
$80/B095 E2 20       SEP #$20                ; 
$80/B097 A9 01       LDA #$01                ;
$80/B099 8F 83 21 00 STA $002183[$00:2183]   ; WRADD.bank = 0x01
$80/B09D C2 20       REP #$20                ;
$80/B09F 68          PLA                     ; pla()
$80/B0A0 85 08       STA $08    [$00:0708]   ; $08 = A
$80/B0A2 E2 20       SEP #$20                ;
$80/B0A4 8B          PHB                     ; phb()
$80/B0A5 A5 02       LDA $02    [$00:0702]   ; B = $02
$80/B0A7 48          PHA                     ;
$80/B0A8 AB          PLB                     ;
$80/B0A9 A5 05       LDA $05    [$00:0705]   ; if($05) {
$80/B0AB C2 30       REP #$30                ;
$80/B0AD F0 1A       BEQ +else               ;
$80/B0AF A6 00       LDX $00    [$00:0700]   ;     X = $00
$80/B0B1 A5 06       LDA $06    [$00:0706]   ;     A = $06
$80/B0B3 89 07 00    BIT #$0007              ;     if(A & 0x0007) {
$80/B0B6 F0 04       BEQ +                   ;
$80/B0B8 18          CLC                     ;         A += 0x0008
$80/B0B9 69 08 00    ADC #$0008              ;     }
+:
$80/B0BC 4A          LSR A                   ;     Y = A >> 3
$80/B0BD 4A          LSR A                   ;
$80/B0BE 4A          LSR A                   ;
$80/B0BF A8          TAY                     ;
$80/B0C0 A9 00 00    LDA #$0000              ;     A = 0x0000
$80/B0C3 22 49 B3 80 JSL $80B349[$80:B349]   ;     $80B349()
$80/B0C7 80 11       BRA +if                 ; } else {
+else:
$80/B0C9                                     ;     ???
+if:
$80/B0DA AB          PLB                     ; }
$80/B0DB C2 20       REP #$20                ; plb()
$80/B0DD E2 10       SEP #$10                ;
$80/B0DF A5 08       LDA $08    [$00:0708]   ; A = $08
$80/B0E1 A6 03       LDX $03    [$00:0703]   ; X = $03
$80/B0E3 A4 04       LDY $04    [$00:0704]   ; Y = $04
$80/B0E5 2B          PLD                     ; pld() 
$80/B0E6 4C 0C BB    JMP $BB0C  [$80:BB0C]   ; jmp $BB0C()


$80/B2D4 E2 20       SEP #$20                ; if($000781) {
$80/B2D6 AF 81 07 00 LDA $000781[$00:0781]   ;
$80/B2DA F0 2B       BEQ $2B    [$B307]      ;
$80/B2DC                                     ;     ???
+:
$80/B307 60          RTS                     ; }


$80/B349 C2 30       REP #$30                ;
$80/B34B 0B          PHD                     ; phd()
$80/B34C 48          PHA                     ;
$80/B34D A9 00 07    LDA #$0700              ; D = 0x0700
$80/B350 5B          TCD                     ;
$80/B351 68          PLA                     ;
$80/B352 E2 20       SEP #$20                ; do {
-:
$80/B354 85 01       STA $01    [$00:0701]   ;     $01 = A
$80/B356 BD 00 00    LDA $0000,x[$85:FBC2]   ;     $00 = $0000[X++]
$80/B359 85 00       STA $00    [$00:0700]   ;
$80/B35B A5 01       LDA $01    [$00:0701]   ;     A = $01
$80/B35D E8          INX                     ;
$80/B35E 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B360 90 04       BCC +                   ;     if(C) {
$80/B362 BD 00 00    LDA $0000,x[$97:AB22]   ;         A = $0000[X++]
$80/B365 E8          INX                     ;     }
+:
$80/B366 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B36A EB          XBA                     ;     xba()
$80/B36B 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B36D 90 04       BCC +                   ;     if(C) {
$80/B36F BD 00 00    LDA $0000,x[$97:AB32]   ;         A = $0000[X++]
$80/B372 E8          INX                     ;     }
+:
$80/B373 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B377 EB          XBA                     ;     xba()
$80/B378 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B37A 90 04       BCC +                   ;     if(C) {
$80/B37C BD 00 00    LDA $0000,x[$97:AB23]   ;         A = $0000[X++]
$80/B37F E8          INX                     ;     }
+:
$80/B380 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B384 EB          XBA                     ;     xba()
$80/B385 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B387 90 04       BCC +                   ;     if(C) {
$80/B389 BD 00 00    LDA $0000,x[$97:AB34]   ;         A = $0000[X++]
$80/B38C E8          INX                     ;     }
+:
$80/B38D 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B391 EB          XBA                     ;     xba()
$80/B392 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B394 90 04       BCC +                   ;     if(C) {
$80/B396 BD 00 00    LDA $0000,x[$97:AB1E]   ;         A = $0000[X++]
$80/B399 E8          INX                     ;     }
+:
$80/B39A 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B39E EB          XBA                     ;     xba()
$80/B39F 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B3A1 90 04       BCC +                   ;     if(C) {
$80/B3A3 BD 00 00    LDA $0000,x[$97:AB1F]   ;         A = $0000[X++]
$80/B3A6 E8          INX                     ;     }
+:
$80/B3A7 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B3AB EB          XBA                     ;     xba()
$80/B3AC 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B3AE 90 04       BCC +                   ;     if(C) {
$80/B3B0 BD 00 00    LDA $0000,x[$97:AB20]   ;         A = $0000[X++]
$80/B3B3 E8          INX                     ;     }
+:
$80/B3B4 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B3B8 EB          XBA                     ;     xba()
$80/B3B9 06 00       ASL $00    [$00:0700]   ;     $00 <<= 1
$80/B3BB 90 04       BCC +                   ;     if(C) {
$80/B3BD BD 00 00    LDA $0000,x[$97:AB38]   ;         A = $0000[X++]
$80/B3C0 E8          INX                     ;     }
+:
$80/B3C1 8F 80 21 00 STA $002180[$00:2180]   ;     WRDATA = A
$80/B3C5 EB          XBA                     ;     xba()
$80/B3C6 88          DEY                     ; } while(--Y)
$80/B3C7 D0 8B       BNE -                   ;
$80/B3C9 2B          PLD                     ; pld()
$80/B3CA C2 30       REP #$30                ;
$80/B3CC 6B          RTL                     ;


$80/BA5C C2 20       REP #$20                A:0700 X:0000 Y:006A P:envMXdIzC
$80/BA5E E2 10       SEP #$10                A:0700 X:0000 Y:006A P:envmXdIzC
$80/BA60 A2 00       LDX #$00                A:0700 X:0000 Y:006A P:envmXdIzC
$80/BA62 BD 6F BA    LDA $BA6F,x[$80:BA6F]   A:0700 X:0000 Y:006A P:envmXdIZC
$80/BA65 9D 40 06    STA $0640,x[$80:0640]   A:1E15 X:0000 Y:006A P:envmXdIzC
$80/BA68 E8          INX                     A:1E15 X:0000 Y:006A P:envmXdIzC
$80/BA69 E8          INX                     A:1E15 X:0001 Y:006A P:envmXdIzC
$80/BA6A E0 70       CPX #$70                A:1E15 X:0002 Y:006A P:envmXdIzC
$80/BA6C D0 F4       BNE $F4    [$BA62]      A:1E15 X:0002 Y:006A P:eNvmXdIzc
$80/BA6E 60          RTS                     A:3E00 X:0070 Y:006A P:envmXdIZC

$80/BADF C2 20       REP #$20                A:0080 X:0000 Y:0000 P:enVmxdizc
$80/BAE1 0B          PHD                     A:0080 X:0000 Y:0000 P:enVmxdizc
$80/BAE2 A9 00 06    LDA #$0600              A:0080 X:0000 Y:0000 P:enVmxdizc
$80/BAE5 5B          TCD                     A:0600 X:0000 Y:0000 P:enVmxdizc
$80/BAE6 E2 10       SEP #$10                A:0600 X:0000 Y:0000 P:enVmxdizc
$80/BAE8 A6 AF       LDX $AF    [$00:06AF]   A:0600 X:0000 Y:0000 P:enVmXdizc
$80/BAEA E8          INX                     A:0600 X:003E Y:0000 P:enVmXdizc
$80/BAEB E8          INX                     A:0600 X:003F Y:0000 P:enVmXdizc
$80/BAEC E0 6E       CPX #$6E                A:0600 X:0040 Y:0000 P:enVmXdizc
$80/BAEE D0 02       BNE $02    [$BAF2]      A:0600 X:0040 Y:0000 P:eNVmXdizc
$80/BAF0 A2 00       LDX #$00                A:0600 X:006E Y:0000 P:enVmXdiZC
$80/BAF2 86 AF       STX $AF    [$00:06AF]   A:0600 X:0040 Y:0000 P:eNVmXdizc
$80/BAF4 B5 40       LDA $40,x  [$00:0680]   A:0600 X:0040 Y:0000 P:eNVmXdizc
$80/BAF6 A6 AE       LDX $AE    [$00:06AE]   A:312C X:0040 Y:0000 P:enVmXdizc
$80/BAF8 E8          INX                     A:312C X:0000 Y:0000 P:enVmXdiZc
$80/BAF9 E8          INX                     A:312C X:0001 Y:0000 P:enVmXdizc
$80/BAFA E0 6E       CPX #$6E                A:312C X:0002 Y:0000 P:enVmXdizc
$80/BAFC D0 02       BNE $02    [$BB00]      A:312C X:0002 Y:0000 P:eNVmXdizc
$80/BAFE A2 00       LDX #$00                A:7F97 X:006E Y:0000 P:enVmXdiZC
$80/BB00 86 AE       STX $AE    [$00:06AE]   A:312C X:0002 Y:0000 P:eNVmXdizc
$80/BB02 55 40       EOR $40,x  [$00:0642]   A:312C X:0002 Y:0000 P:eNVmXdizc
$80/BB04 95 40       STA $40,x  [$00:0642]   A:3478 X:0002 Y:0000 P:enVmXdizc
$80/BB06 2B          PLD                     A:3478 X:0002 Y:0000 P:enVmXdizc
$80/BB07 6B          RTL                     A:3478 X:0002 Y:0000 P:enVmXdizc

$80/BB0C C2 30       REP #$30                A:0000 X:0040 Y:0020 P:envmXdizc
$80/BB0E 0B          PHD                     A:0000 X:0040 Y:0020 P:envmxdizc
$80/BB0F 8F 10 07 00 STA $000710[$00:0710]   A:0000 X:0040 Y:0020 P:envmxdizc
$80/BB13 A5 15       LDA $15    [$00:1815]   A:0000 X:0040 Y:0020 P:envmxdizc
$80/BB15 4A          LSR A                   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB16 4A          LSR A                   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB17 4A          LSR A                   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB18 29 3F 00    AND #$003F              A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB1B 8F 08 07 00 STA $000708[$00:0708]   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB1F A5 19       LDA $19    [$00:1819]   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB21 4A          LSR A                   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB22 4A          LSR A                   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB23 4A          LSR A                   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB24 29 1F 00    AND #$001F              A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB27 8F 0A 07 00 STA $00070A[$00:070A]   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB2B 8A          TXA                     A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB2C 8F 0C 07 00 STA $00070C[$00:070C]   A:0040 X:0040 Y:0020 P:envmxdizc
$80/BB30 98          TYA                     A:0040 X:0040 Y:0020 P:envmxdizc
$80/BB31 8F 0E 07 00 STA $00070E[$00:070E]   A:0020 X:0040 Y:0020 P:envmxdizc
$80/BB35 A5 0E       LDA $0E    [$00:180E]   A:0020 X:0040 Y:0020 P:envmxdizc
$80/BB37 8F 00 07 00 STA $000700[$00:0700]   A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB3B E2 30       SEP #$30                A:0000 X:0040 Y:0020 P:envmxdiZc
$80/BB3D A5 10       LDA $10    [$00:1810]   A:0000 X:0040 Y:0020 P:envMXdiZc
$80/BB3F 8F 02 07 00 STA $000702[$00:0702]   A:0000 X:0040 Y:0020 P:envMXdiZc
$80/BB43 A5 12       LDA $12    [$00:1812]   A:0000 X:0040 Y:0020 P:envMXdiZc
$80/BB45 8F 03 07 00 STA $000703[$00:0703]   A:0000 X:0040 Y:0020 P:envMXdiZc
$80/BB49 A5 0D       LDA $0D    [$00:180D]   A:0000 X:0040 Y:0020 P:envMXdiZc
$80/BB4B 38          SEC                     A:0003 X:0040 Y:0020 P:envMXdizc
$80/BB4C E9 03       SBC #$03                A:0003 X:0040 Y:0020 P:envMXdizC
$80/BB4E AA          TAX                     A:0000 X:0040 Y:0020 P:envMXdiZC
$80/BB4F 10 17       BPL $17    [$BB68]      A:0000 X:0000 Y:0020 P:envMXdiZC
$80/BB68 BD 01 00    LDA $0001,x[$80:0001]   A:0000 X:0000 Y:0020 P:envMXdiZC
$80/BB6B 29 FC       AND #$FC                A:0001 X:0000 Y:0020 P:envMXdizC
$80/BB6D EB          XBA                     A:0000 X:0000 Y:0020 P:envMXdiZC
$80/BB6E A9 00       LDA #$00                A:0000 X:0000 Y:0020 P:envMXdiZC
$80/BB70 C2 30       REP #$30                A:0000 X:0000 Y:0020 P:envMXdiZC
$80/BB72 48          PHA                     A:0000 X:0000 Y:0020 P:envmxdiZC
$80/BB73 A9 00 07    LDA #$0700              A:0000 X:0000 Y:0020 P:envmxdiZC
$80/BB76 5B          TCD                     A:0700 X:0000 Y:0020 P:envmxdizC
$80/BB77 8B          PHB                     A:0700 X:0000 Y:0020 P:envmxdizC
$80/BB78 E2 20       SEP #$20                A:0700 X:0000 Y:0020 P:envmxdizC
$80/BB7A A5 0C       LDA $0C    [$00:070C]   A:0700 X:0000 Y:0020 P:envMxdizC
$80/BB7C 8F 02 42 00 STA $004202[$00:4202]   A:0740 X:0000 Y:0020 P:envMxdizC
$80/BB80 A5 0E       LDA $0E    [$00:070E]   A:0740 X:0000 Y:0020 P:envMxdizC
$80/BB82 8F 03 42 00 STA $004203[$00:4203]   A:0720 X:0000 Y:0020 P:envMxdizC
$80/BB86 C2 20       REP #$20                A:0720 X:0000 Y:0020 P:envMxdizC
$80/BB88 EA          NOP                     A:0720 X:0000 Y:0020 P:envmxdizC
$80/BB89 AF 16 42 00 LDA $004216[$00:4216]   A:0720 X:0000 Y:0020 P:envmxdizC
$80/BB8D 85 04       STA $04    [$00:0704]   A:0800 X:0000 Y:0020 P:envmxdizC
$80/BB8F E2 20       SEP #$20                A:0800 X:0000 Y:0020 P:envmxdizC
$80/BB91 A9 7F       LDA #$7F                A:0800 X:0000 Y:0020 P:envMxdizC
$80/BB93 48          PHA                     A:087F X:0000 Y:0020 P:envMxdizC
$80/BB94 AB          PLB                     A:087F X:0000 Y:0020 P:envMxdizC
$80/BB95 A5 02       LDA $02    [$00:0702]   A:087F X:0000 Y:0020 P:envMxdizC
$80/BB97 0A          ASL A                   A:0800 X:0000 Y:0020 P:envMxdiZC
$80/BB98 0A          ASL A                   A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BB99 18          CLC                     A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BB9A 65 01       ADC $01    [$00:0701]   A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BB9C 85 01       STA $01    [$00:0701]   A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BB9E A5 03       LDA $03    [$00:0703]   A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BBA0 29 E0       AND #$E0                A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BBA2 85 13       STA $13    [$00:0713]   A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BBA4 64 12       STZ $12    [$00:0712]   A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BBA6 C2 30       REP #$30                A:0800 X:0000 Y:0020 P:envMxdiZc
$80/BBA8 A6 10       LDX $10    [$00:0710]   A:0800 X:0000 Y:0020 P:envmxdiZc
$80/BBAA BD 00 00    LDA $0000,x[$7F:0000]   A:0800 X:0000 Y:0020 P:envmxdiZc
$80/BBAD 18          CLC                     A:0000 X:0000 Y:0020 P:envmxdiZc
$80/BBAE 65 00       ADC $00    [$00:0700]   A:0000 X:0000 Y:0020 P:envmxdiZc
$80/BBB0 45 12       EOR $12    [$00:0712]   A:0000 X:0000 Y:0020 P:envmxdiZc
$80/BBB2 9D 00 00    STA $0000,x[$7F:0000]   A:0000 X:0000 Y:0020 P:envmxdiZc
$80/BBB5 E8          INX                     A:0000 X:0000 Y:0020 P:envmxdiZc
$80/BBB6 E8          INX                     A:0000 X:0001 Y:0020 P:envmxdizc
$80/BBB7 C6 04       DEC $04    [$00:0704]   A:0000 X:0002 Y:0020 P:envmxdizc
$80/BBB9 D0 EF       BNE $EF    [$BBAA]      A:0000 X:0002 Y:0020 P:envmxdizc
$80/BBBB AB          PLB                     A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBBC 68          PLA                     A:0000 X:1000 Y:0020 P:eNvmxdizc
$80/BBBD 85 14       STA $14    [$00:0714]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBBF 85 1A       STA $1A    [$00:071A]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBC1 18          CLC                     A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBC2 69 00 04    ADC #$0400              A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBC5 85 20       STA $20    [$00:0720]   A:0400 X:1000 Y:0020 P:envmxdizc
$80/BBC7 85 26       STA $26    [$00:0726]   A:0400 X:1000 Y:0020 P:envmxdizc
$80/BBC9 A5 10       LDA $10    [$00:0710]   A:0400 X:1000 Y:0020 P:envmxdizc
$80/BBCB 85 18       STA $18    [$00:0718]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBCD 85 1E       STA $1E    [$00:071E]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBCF 85 24       STA $24    [$00:0724]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBD1 85 2A       STA $2A    [$00:072A]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBD3 64 16       STZ $16    [$00:0716]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBD5 64 1C       STZ $1C    [$00:071C]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBD7 64 22       STZ $22    [$00:0722]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBD9 64 28       STZ $28    [$00:0728]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBDB A5 0C       LDA $0C    [$00:070C]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBDD 0A          ASL A                   A:0040 X:1000 Y:0020 P:envmxdizc
$80/BBDE 85 06       STA $06    [$00:0706]   A:0080 X:1000 Y:0020 P:envmxdizc
$80/BBE0 A5 08       LDA $08    [$00:0708]   A:0080 X:1000 Y:0020 P:envmxdizc
$80/BBE2 C9 20 00    CMP #$0020              A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBE5 B0 50       BCS $50    [$BC37]      A:0000 X:1000 Y:0020 P:eNvmxdizc
$80/BBE7 18          CLC                     A:0000 X:1000 Y:0020 P:eNvmxdizc
$80/BBE8 65 14       ADC $14    [$00:0714]   A:0000 X:1000 Y:0020 P:eNvmxdizc
$80/BBEA 85 14       STA $14    [$00:0714]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBEC A5 0C       LDA $0C    [$00:070C]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BBEE 18          CLC                     A:0040 X:1000 Y:0020 P:envmxdizc
$80/BBEF 65 08       ADC $08    [$00:0708]   A:0040 X:1000 Y:0020 P:envmxdizc
$80/BBF1 C9 21 00    CMP #$0021              A:0040 X:1000 Y:0020 P:envmxdizc
$80/BBF4 B0 07       BCS $07    [$BBFD]      A:0040 X:1000 Y:0020 P:envmxdizC
$80/BBF6 A5 0C       LDA $0C    [$00:070C]   A:0018 X:20A2 Y:0001 P:eNvmxdizc
$80/BBF8 85 16       STA $16    [$00:0716]   A:0011 X:20A2 Y:0001 P:envmxdizc
$80/BBFA 4C 88 BC    JMP $BC88  [$80:BC88]   A:0011 X:20A2 Y:0001 P:envmxdizc
$80/BBFD 38          SEC                     A:0040 X:1000 Y:0020 P:envmxdizC
$80/BBFE A9 20 00    LDA #$0020              A:0040 X:1000 Y:0020 P:envmxdizC
$80/BC01 E5 08       SBC $08    [$00:0708]   A:0020 X:1000 Y:0020 P:envmxdizC
$80/BC03 85 16       STA $16    [$00:0716]   A:0020 X:1000 Y:0020 P:envmxdizC
$80/BC05 38          SEC                     A:0020 X:1000 Y:0020 P:envmxdizC
$80/BC06 A5 0C       LDA $0C    [$00:070C]   A:0020 X:1000 Y:0020 P:envmxdizC
$80/BC08 E5 16       SBC $16    [$00:0716]   A:0040 X:1000 Y:0020 P:envmxdizC
$80/BC0A 85 0C       STA $0C    [$00:070C]   A:0020 X:1000 Y:0020 P:envmxdizC
$80/BC0C A5 16       LDA $16    [$00:0716]   A:0020 X:1000 Y:0020 P:envmxdizC
$80/BC0E 0A          ASL A                   A:0020 X:1000 Y:0020 P:envmxdizC
$80/BC0F 18          CLC                     A:0040 X:1000 Y:0020 P:envmxdizc
$80/BC10 65 24       ADC $24    [$00:0724]   A:0040 X:1000 Y:0020 P:envmxdizc
$80/BC12 85 24       STA $24    [$00:0724]   A:0040 X:1000 Y:0020 P:envmxdizc
$80/BC14 A5 0C       LDA $0C    [$00:070C]   A:0040 X:1000 Y:0020 P:envmxdizc
$80/BC16 C9 21 00    CMP #$0021              A:0020 X:1000 Y:0020 P:envmxdizc
$80/BC19 B0 04       BCS $04    [$BC1F]      A:0020 X:1000 Y:0020 P:eNvmxdizc
$80/BC1B 85 22       STA $22    [$00:0722]   A:0020 X:1000 Y:0020 P:eNvmxdizc
$80/BC1D 80 69       BRA $69    [$BC88]      A:0020 X:1000 Y:0020 P:eNvmxdizc
$80/BC37 38          SEC                     A:0020 X:1800 Y:0020 P:envmxdiZC
$80/BC38 E9 20 00    SBC #$0020              A:0020 X:1800 Y:0020 P:envmxdiZC
$80/BC3B 18          CLC                     A:0000 X:1800 Y:0020 P:envmxdiZC
$80/BC3C 65 20       ADC $20    [$00:0720]   A:0000 X:1800 Y:0020 P:envmxdiZc
$80/BC3E 85 20       STA $20    [$00:0720]   A:0400 X:1800 Y:0020 P:envmxdizc
$80/BC40 A5 0C       LDA $0C    [$00:070C]   A:0400 X:1800 Y:0020 P:envmxdizc
$80/BC42 18          CLC                     A:0020 X:1800 Y:0020 P:envmxdizc
$80/BC43 65 08       ADC $08    [$00:0708]   A:0020 X:1800 Y:0020 P:envmxdizc
$80/BC45 C9 41 00    CMP #$0041              A:0040 X:1800 Y:0020 P:envmxdizc
$80/BC48 B0 06       BCS $06    [$BC50]      A:0040 X:1800 Y:0020 P:eNvmxdizc
$80/BC4A A5 0C       LDA $0C    [$00:070C]   A:0040 X:1800 Y:0020 P:eNvmxdizc
$80/BC4C 85 22       STA $22    [$00:0722]   A:0020 X:1800 Y:0020 P:envmxdizc
$80/BC4E 80 38       BRA $38    [$BC88]      A:0020 X:1800 Y:0020 P:envmxdizc
$80/BC88 A5 0A       LDA $0A    [$00:070A]   A:0020 X:1000 Y:0020 P:eNvmxdizc
$80/BC8A 0A          ASL A                   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC8B 0A          ASL A                   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC8C 0A          ASL A                   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC8D 0A          ASL A                   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC8E 0A          ASL A                   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC8F 85 0A       STA $0A    [$00:070A]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC91 06 16       ASL $16    [$00:0716]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC93 06 1C       ASL $1C    [$00:071C]   A:0000 X:1000 Y:0020 P:envmxdizc
$80/BC95 06 22       ASL $22    [$00:0722]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC97 06 28       ASL $28    [$00:0728]   A:0000 X:1000 Y:0020 P:envmxdizc
$80/BC99 C2 20       REP #$20                A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC9B A5 16       LDA $16    [$00:0716]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BC9D F0 39       BEQ $39    [$BCD8]      A:0040 X:1000 Y:0020 P:envmxdizc
$80/BC9F 18          CLC                     A:0040 X:1000 Y:0020 P:envmxdizc
$80/BCA0 A5 0A       LDA $0A    [$00:070A]   A:0040 X:1000 Y:0020 P:envmxdizc
$80/BCA2 65 14       ADC $14    [$00:0714]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BCA4 85 2C       STA $2C    [$00:072C]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BCA6 22 30 88 80 JSL $808830[$80:8830]   A:0000 X:1000 Y:0020 P:envmxdiZc
$80/BCAA A9 80       LDA #$80                A:0008 X:0000 Y:0020 P:envMXdizc
$80/BCAC 9D C0 05    STA $05C0,x[$80:05C0]   A:0080 X:0000 Y:0020 P:eNvMXdizc
$80/BCAF A9 7F       LDA #$7F                A:0080 X:0000 Y:0020 P:eNvMXdizc
$80/BCB1 9D C1 05    STA $05C1,x[$80:05C1]   A:007F X:0000 Y:0020 P:envMXdizc
$80/BCB4 C2 20       REP #$20                A:007F X:0000 Y:0020 P:envMXdizc
$80/BCB6 A5 18       LDA $18    [$00:0718]   A:007F X:0000 Y:0020 P:envmXdizc
$80/BCB8 9D C2 05    STA $05C2,x[$80:05C2]   A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BCBB A5 2C       LDA $2C    [$00:072C]   A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BCBD 9D C4 05    STA $05C4,x[$80:05C4]   A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BCC0 A5 16       LDA $16    [$00:0716]   A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BCC2 C9 01 14    CMP #$1401              A:0040 X:0000 Y:0020 P:envmXdizc
$80/BCC5 B0 FE       BCS $FE    [$BCC5]      A:0040 X:0000 Y:0020 P:eNvmXdizc
$80/BCC7 9D C6 05    STA $05C6,x[$80:05C6]   A:0040 X:0000 Y:0020 P:eNvmXdizc
$80/BCCA E2 20       SEP #$20                A:0040 X:0000 Y:0020 P:eNvmXdizc
$80/BCCC 9C 9C 00    STZ $009C  [$80:009C]   A:0040 X:0000 Y:0020 P:eNvMXdizc
$80/BCCF C2 20       REP #$20                A:0040 X:0000 Y:0020 P:eNvMXdizc
$80/BCD1 18          CLC                     A:0040 X:0000 Y:0020 P:eNvmXdizc
$80/BCD2 A5 18       LDA $18    [$00:0718]   A:0040 X:0000 Y:0020 P:eNvmXdizc
$80/BCD4 65 06       ADC $06    [$00:0706]   A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BCD6 85 18       STA $18    [$00:0718]   A:0080 X:0000 Y:0020 P:envmXdizc
$80/BCD8 A5 1C       LDA $1C    [$00:071C]   A:0080 X:0000 Y:0020 P:envmXdizc
$80/BCDA F0 39       BEQ $39    [$BD15]      A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BD15 A5 22       LDA $22    [$00:0722]   A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BD17 F0 39       BEQ $39    [$BD52]      A:0040 X:0000 Y:0020 P:envmXdizc
$80/BD19 18          CLC                     A:0040 X:0000 Y:0020 P:envmXdizc
$80/BD1A A5 0A       LDA $0A    [$00:070A]   A:0040 X:0000 Y:0020 P:envmXdizc
$80/BD1C 65 20       ADC $20    [$00:0720]   A:0000 X:0000 Y:0020 P:envmXdiZc
$80/BD1E 85 30       STA $30    [$00:0730]   A:0400 X:0000 Y:0020 P:envmXdizc
$80/BD20 22 30 88 80 JSL $808830[$80:8830]   A:0400 X:0000 Y:0020 P:envmXdizc
$80/BD24 A9 80       LDA #$80                A:0010 X:0008 Y:0020 P:envMXdizc
$80/BD26 9D C0 05    STA $05C0,x[$80:05C8]   A:0080 X:0008 Y:0020 P:eNvMXdizc
$80/BD29 A9 7F       LDA #$7F                A:0080 X:0008 Y:0020 P:eNvMXdizc
$80/BD2B 9D C1 05    STA $05C1,x[$80:05C9]   A:007F X:0008 Y:0020 P:envMXdizc
$80/BD2E C2 20       REP #$20                A:007F X:0008 Y:0020 P:envMXdizc
$80/BD30 A5 24       LDA $24    [$00:0724]   A:007F X:0008 Y:0020 P:envmXdizc
$80/BD32 9D C2 05    STA $05C2,x[$80:05CA]   A:0040 X:0008 Y:0020 P:envmXdizc
$80/BD35 A5 30       LDA $30    [$00:0730]   A:0040 X:0008 Y:0020 P:envmXdizc
$80/BD37 9D C4 05    STA $05C4,x[$80:05CC]   A:0400 X:0008 Y:0020 P:envmXdizc
$80/BD3A A5 22       LDA $22    [$00:0722]   A:0400 X:0008 Y:0020 P:envmXdizc
$80/BD3C C9 01 14    CMP #$1401              A:0040 X:0008 Y:0020 P:envmXdizc
$80/BD3F B0 FE       BCS $FE    [$BD3F]      A:0040 X:0008 Y:0020 P:eNvmXdizc
$80/BD41 9D C6 05    STA $05C6,x[$80:05CE]   A:0040 X:0008 Y:0020 P:eNvmXdizc
$80/BD44 E2 20       SEP #$20                A:0040 X:0008 Y:0020 P:eNvmXdizc
$80/BD46 9C 9C 00    STZ $009C  [$80:009C]   A:0040 X:0008 Y:0020 P:eNvMXdizc
$80/BD49 C2 20       REP #$20                A:0040 X:0008 Y:0020 P:eNvMXdizc
$80/BD4B 18          CLC                     A:0040 X:0008 Y:0020 P:eNvmXdizc
$80/BD4C A5 24       LDA $24    [$00:0724]   A:0040 X:0008 Y:0020 P:eNvmXdizc
$80/BD4E 65 06       ADC $06    [$00:0706]   A:0040 X:0008 Y:0020 P:envmXdizc
$80/BD50 85 24       STA $24    [$00:0724]   A:00C0 X:0008 Y:0020 P:envmXdizc
$80/BD52 A5 28       LDA $28    [$00:0728]   A:00C0 X:0008 Y:0020 P:envmXdizc
$80/BD54 F0 39       BEQ $39    [$BD8F]      A:0000 X:0008 Y:0020 P:envmXdiZc
$80/BD8F A5 0A       LDA $0A    [$00:070A]   A:0000 X:0008 Y:0020 P:envmXdiZc
$80/BD91 18          CLC                     A:0000 X:0008 Y:0020 P:envmXdiZc
$80/BD92 69 20 00    ADC #$0020              A:0000 X:0008 Y:0020 P:envmXdiZc
$80/BD95 29 E0 03    AND #$03E0              A:0020 X:0008 Y:0020 P:envmXdizc
$80/BD98 85 0A       STA $0A    [$00:070A]   A:0020 X:0008 Y:0020 P:envmXdizc
$80/BD9A C6 0E       DEC $0E    [$00:070E]   A:0020 X:0008 Y:0020 P:envmXdizc
$80/BD9C F0 03       BEQ $03    [$BDA1]      A:0020 X:0008 Y:0020 P:envmXdizc
$80/BD9E 4C 99 BC    JMP $BC99  [$80:BC99]   A:0020 X:0008 Y:0020 P:envmXdizc
$80/BDA1 2B          PLD                     A:0000 X:0078 Y:0020 P:envmXdiZc
$80/BDA2 60          RTS                     A:0000 X:0078 Y:0020 P:envmXdizc

$80/BE9E 20 81 BF    JSR $BF81  [$80:BF81]   A:1880 X:0020 Y:1780 P:eNvMxdizC
$80/BEA1 22 F9 C0 80 JSL $80C0F9[$80:C0F9]   A:BF80 X:0001 Y:0034 P:envMXdizC
$80/BF81 22 D2 93 80 JSL $8093D2[$80:93D2]   A:1880 X:0020 Y:1780 P:eNvMxdizC
$80/BF85 C2 10       REP #$10                A:5580 X:0020 Y:1780 P:envMxdizC
$80/BF87 E2 20       SEP #$20                A:5580 X:0020 Y:1780 P:envMxdizC
$80/BF89 A2 00 00    LDX #$0000              A:5580 X:0020 Y:1780 P:envMxdizC
$80/BF8C 9E 40 18    STZ $1840,x[$80:1840]   A:5580 X:0000 Y:1780 P:envMxdiZC
$80/BF8F E8          INX                     A:5580 X:0000 Y:1780 P:envMxdiZC
$80/BF90 E0 20 03    CPX #$0320              A:5580 X:0001 Y:1780 P:envMxdizC
$80/BF93 D0 F7       BNE $F7    [$BF8C]      A:5580 X:0001 Y:1780 P:eNvMxdizc
$80/BF95 64 11       STZ $11    [$00:1811]   A:5580 X:0320 Y:1780 P:envMxdiZC
$80/BF97 E2 20       SEP #$20                A:5580 X:0320 Y:1780 P:envMxdiZC
$80/BF99 9C B4 00    STZ $00B4  [$80:00B4]   A:5580 X:0320 Y:1780 P:envMxdiZC
$80/BF9C 9C B5 00    STZ $00B5  [$80:00B5]   A:5580 X:0320 Y:1780 P:envMxdiZC
$80/BF9F A9 07       LDA #$07                A:5580 X:0320 Y:1780 P:envMxdiZC
$80/BFA1 8D B3 00    STA $00B3  [$80:00B3]   A:5507 X:0320 Y:1780 P:envMxdizC
$80/BFA4 22 78 88 80 JSL $808878[$80:8878]   A:5507 X:0320 Y:1780 P:envMxdizC
$80/BFA8 C2 20       REP #$20                A:0007 X:0320 Y:1780 P:envMxdizC
$80/BFAA A9 C8 BF    LDA #$BFC8              A:0007 X:0320 Y:1780 P:envmxdizC
$80/BFAD 85 0B       STA $0B    [$00:180B]   A:BFC8 X:0320 Y:1780 P:eNvmxdizC
$80/BFAF 22 7E 94 80 JSL $80947E[$80:947E]   A:BFC8 X:0320 Y:1780 P:eNvmxdizC
$80/BFB3 E2 30       SEP #$30                A:BF00 X:0000 Y:0034 P:envMXdiZC
$80/BFB5 A9 01       LDA #$01                A:BF00 X:0000 Y:0034 P:envMXdiZC
$80/BFB7 A2 00       LDX #$00                A:BF01 X:0000 Y:0034 P:envMXdizC
$80/BFB9 22 5C 88 80 JSL $80885C[$80:885C]   A:BF01 X:0000 Y:0034 P:envMXdiZC
$80/BFBD E2 30       SEP #$30                A:BF80 X:0000 Y:0034 P:envMXdizC
$80/BFBF A9 01       LDA #$01                A:BF80 X:0000 Y:0034 P:envMXdizC
$80/BFC1 A2 01       LDX #$01                A:BF01 X:0000 Y:0034 P:envMXdizC
$80/BFC3 22 5C 88 80 JSL $80885C[$80:885C]   A:BF01 X:0001 Y:0034 P:envMXdizC
$80/BFC7 60          RTS                     A:BF80 X:0001 Y:0034 P:envMXdizC

$80/C0F9 E2 30       SEP #$30                A:BF80 X:0001 Y:0034 P:envMXdizC
$80/C0FB A9 80       LDA #$80                A:BF80 X:0001 Y:0034 P:envMXdizC
$80/C0FD 48          PHA                     A:BF80 X:0001 Y:0034 P:eNvMXdizC
$80/C0FE AB          PLB                     A:BF80 X:0001 Y:0034 P:eNvMXdizC
$80/C0FF 22 F2 D5 80 JSL $80D5F2[$80:D5F2]   A:BF80 X:0001 Y:0034 P:eNvMXdizC
$80/C103 E2 20       SEP #$20                A:0000 X:0020 Y:0080 P:envmXdiZC
$80/C105 64 11       STZ $11    [$00:1811]   A:0000 X:0020 Y:0080 P:envMXdiZC
$80/C107 9C 5B 1B    STZ $1B5B  [$80:1B5B]   A:0000 X:0020 Y:0080 P:envMXdiZC
$80/C10A C2 30       REP #$30                A:0000 X:0020 Y:0080 P:envMXdiZC
$80/C10C 9C 84 07    STZ $0784  [$80:0784]   A:0000 X:0020 Y:0080 P:envmxdiZC
$80/C10F 9C 82 07    STZ $0782  [$80:0782]   A:0000 X:0020 Y:0080 P:envmxdiZC
$80/C112 A9 6C C2    LDA #$C26C              A:0000 X:0020 Y:0080 P:envmxdiZC
$80/C115 85 0B       STA $0B    [$00:180B]   A:C26C X:0020 Y:0080 P:eNvmxdizC
$80/C117 22 7E 94 80 JSL $80947E[$80:947E]   A:C26C X:0020 Y:0080 P:eNvmxdizC
$80/C11B 22 64 93 80 JSL $809364[$80:9364]   A:C200 X:0000 Y:0040 P:envMXdiZC
$80/C11F E2 20       SEP #$20                A:C200 X:0000 Y:0000 P:eNvmxdizC
$80/C121 AD 41 00    LDA $0041  [$80:0041]   A:C200 X:0000 Y:0000 P:eNvMxdizC
$80/C124 29 F0       AND #$F0                A:C200 X:0000 Y:0000 P:envMxdiZC
$80/C126 09 0F       ORA #$0F                A:C200 X:0000 Y:0000 P:envMxdiZC
$80/C128 8D 41 00    STA $0041  [$80:0041]   A:C20F X:0000 Y:0000 P:envMxdizC
$80/C12B 22 10 88 80 JSL $808810[$80:8810]   A:C20F X:0000 Y:0000 P:envMxdizC
$80/C12F 22 64 93 80 JSL $809364[$80:9364]   A:0080 X:0000 Y:0000 P:envMXdizC
$80/C133 22 DF BA 80 JSL $80BADF[$80:BADF]   A:0080 X:0000 Y:0000 P:enVmxdizc
$80/C137 C2 20       REP #$20                A:3478 X:0002 Y:0000 P:enVmXdizc
$80/C139 AD 58 00    LDA $0058  [$80:0058]   A:3478 X:0002 Y:0000 P:enVmXdizc
$80/C13C 0D 5A 00    ORA $005A  [$80:005A]   A:0000 X:0002 Y:0000 P:enVmXdiZc
$80/C13F 29 01 10    AND #$1001              A:0000 X:0002 Y:0000 P:enVmXdiZc
$80/C142 D0 49       BNE $49    [$C18D]      A:0000 X:0002 Y:0000 P:enVmXdiZc
$80/C144 E2 20       SEP #$20                A:0000 X:0002 Y:0000 P:enVmXdiZc
$80/C146 AF 5B 1B 80 LDA $801B5B[$80:1B5B]   A:0000 X:0002 Y:0000 P:enVMXdiZc
$80/C14A F0 E3       BEQ $E3    [$C12F]      A:0000 X:0002 Y:0000 P:enVMXdiZc
$80/C14C 22 64 93 80 JSL $809364[$80:9364]   A:0001 X:000E Y:0000 P:enVMXdizc
$80/C150 22 DF BA 80 JSL $80BADF[$80:BADF]   A:0001 X:000E Y:0000 P:enVmxdizc
$80/C154 C2 20       REP #$20                A:29D3 X:0010 Y:0000 P:enVmXdizc
$80/C156 AD 58 00    LDA $0058  [$80:0058]   A:29D3 X:0010 Y:0000 P:enVmXdizc
$80/C159 0D 5A 00    ORA $005A  [$80:005A]   A:0000 X:0010 Y:0000 P:enVmXdiZc
$80/C15C 29 01 10    AND #$1001              A:0000 X:0010 Y:0000 P:enVmXdiZc
$80/C15F D0 2C       BNE $2C    [$C18D]      A:0000 X:0010 Y:0000 P:enVmXdiZc
$80/C161 E2 20       SEP #$20                A:0000 X:0010 Y:0000 P:enVmXdiZc
$80/C163 AF 5B 1B 80 LDA $801B5B[$80:1B5B]   A:0000 X:0010 Y:0000 P:enVMXdiZc
$80/C167 C9 80       CMP #$80                A:0001 X:0010 Y:0000 P:enVMXdizc
$80/C169 D0 E1       BNE $E1    [$C14C]      A:0001 X:0010 Y:0000 P:eNVMXdizc
$80/C16B 22 64 93 80 JSL $809364[$80:9364]   A:0080 X:003A Y:0000 P:enVMXdiZC
$80/C16F 22 DF BA 80 JSL $80BADF[$80:BADF]   A:0080 X:003A Y:0000 P:enVmxdizc
$80/C173 C2 30       REP #$30                A:5395 X:003C Y:0000 P:enVmXdizc
$80/C175 AD 58 00    LDA $0058  [$80:0058]   A:5395 X:003C Y:0000 P:enVmxdizc
$80/C178 0D 5A 00    ORA $005A  [$80:005A]   A:0000 X:003C Y:0000 P:enVmxdiZc
$80/C17B 29 01 10    AND #$1001              A:0000 X:003C Y:0000 P:enVmxdiZc
$80/C17E 38          SEC                     A:0000 X:003C Y:0000 P:enVmxdiZc
$80/C17F D0 4B       BNE $4B    [$C1CC]      A:0000 X:003C Y:0000 P:enVmxdiZC
$80/C181 E2 20       SEP #$20                A:0000 X:003C Y:0000 P:enVmxdiZC
$80/C183 AF 5B 1B 80 LDA $801B5B[$80:1B5B]   A:0000 X:003C Y:0000 P:enVMxdiZC
$80/C187 C9 FF       CMP #$FF                A:0080 X:003C Y:0000 P:eNVMxdizC
$80/C189 D0 E0       BNE $E0    [$C16B]      A:0080 X:003C Y:0000 P:eNVMxdizc
$80/C18B 80 1E       BRA $1E    [$C1AB]      A:00FF X:0028 Y:0000 P:enVMxdiZC
$80/C1AB C2 30       REP #$30                A:00FF X:0028 Y:0000 P:enVMxdiZC
$80/C1AD A2 18 15    LDX #$1518              A:00FF X:0028 Y:0000 P:enVmxdiZC
$80/C1B0 DA          PHX                     A:00FF X:1518 Y:0000 P:enVmxdizC
$80/C1B1 22 64 93 80 JSL $809364[$80:9364]   A:00FF X:1518 Y:0000 P:enVmxdizC
$80/C1B5 22 DF BA 80 JSL $80BADF[$80:BADF]   A:00FF X:1518 Y:0000 P:enVmxdizc
$80/C1B9 C2 30       REP #$30                A:2C6D X:002A Y:0000 P:enVmXdizc
$80/C1BB FA          PLX                     A:2C6D X:002A Y:0000 P:enVmxdizc
$80/C1BC AD 58 00    LDA $0058  [$80:0058]   A:2C6D X:1518 Y:0000 P:enVmxdizc
$80/C1BF 0D 5A 00    ORA $005A  [$80:005A]   A:0000 X:1518 Y:0000 P:enVmxdiZc
$80/C1C2 89 01 10    BIT #$1001              A:0000 X:1518 Y:0000 P:enVmxdiZc
$80/C1C5 38          SEC                     A:0000 X:1518 Y:0000 P:enVmxdiZc
$80/C1C6 D0 04       BNE $04    [$C1CC]      A:0000 X:1518 Y:0000 P:enVmxdiZC
$80/C1C8 CA          DEX                     A:0000 X:1518 Y:0000 P:enVmxdiZC
$80/C1C9 D0 E5       BNE $E5    [$C1B0]      A:0000 X:1517 Y:0000 P:enVmxdizC
$80/C3F6 C2 20       REP #$20                A:C3F6 X:000C Y:0001 P:eNvmxdizc
$80/C3F8 9C 84 07    STZ $0784  [$80:0784]   A:C3F6 X:000C Y:0001 P:eNvmxdizc
$80/C3FB C2 20       REP #$20                A:C3F6 X:000C Y:0001 P:eNvmxdizc
$80/C3FD A9 00 00    LDA #$0000              A:C3F6 X:000C Y:0001 P:eNvmxdizc
$80/C400 8D 18 00    STA $0018  [$80:0018]   A:0000 X:000C Y:0001 P:envmxdiZc
$80/C403 AF 84 07 00 LDA $000784[$00:0784]   A:0000 X:000C Y:0001 P:envmxdiZc
$80/C407 8D 1A 00    STA $001A  [$80:001A]   A:0000 X:000C Y:0001 P:envmxdiZc
$80/C40A C2 20       REP #$20                A:0000 X:000C Y:0001 P:envmxdiZc
$80/C40C A9 00 00    LDA #$0000              A:0000 X:000C Y:0001 P:envmxdiZc
$80/C40F 8D 1C 00    STA $001C  [$80:001C]   A:0000 X:000C Y:0001 P:envmxdiZc
$80/C412 A9 00 00    LDA #$0000              A:0000 X:000C Y:0001 P:envmxdiZc
$80/C415 8D 1E 00    STA $001E  [$80:001E]   A:0000 X:000C Y:0001 P:envmxdiZc
$80/C418 6B          RTL                     A:0000 X:000C Y:0001 P:envmxdiZc

$80/C419 E2 30       SEP #$30                A:C419 X:000C Y:0001 P:eNvmxdizc
$80/C41B A9 02       LDA #$02                A:C419 X:000C Y:0001 P:eNvMXdizc
$80/C41D 8D 01 00    STA $0001  [$80:0001]   A:C402 X:000C Y:0001 P:envMXdizc
$80/C420 8D 07 21    STA $2107  [$80:2107]   A:C402 X:000C Y:0001 P:envMXdizc
$80/C423 C2 20       REP #$20                A:C402 X:000C Y:0001 P:envMXdizc
$80/C425 C2 20       REP #$20                A:C402 X:000C Y:0001 P:envmXdizc
$80/C427 A9 00 00    LDA #$0000              A:C402 X:000C Y:0001 P:envmXdizc
$80/C42A 8D 18 00    STA $0018  [$80:0018]   A:0000 X:000C Y:0001 P:envmXdiZc
$80/C42D A9 FF 00    LDA #$00FF              A:0000 X:000C Y:0001 P:envmXdiZc
$80/C430 8D 1A 00    STA $001A  [$80:001A]   A:00FF X:000C Y:0001 P:envmXdizc
$80/C433 C2 20       REP #$20                A:00FF X:000C Y:0001 P:envmXdizc
$80/C435 A9 00 00    LDA #$0000              A:00FF X:000C Y:0001 P:envmXdizc
$80/C438 8D 1C 00    STA $001C  [$80:001C]   A:0000 X:000C Y:0001 P:envmXdiZc
$80/C43B A9 FF 00    LDA #$00FF              A:0000 X:000C Y:0001 P:envmXdiZc
$80/C43E 8D 1E 00    STA $001E  [$80:001E]   A:00FF X:000C Y:0001 P:envmXdizc
$80/C441 6B          RTL                     A:00FF X:000C Y:0001 P:envmXdizc

$80/C497 E2 30       SEP #$30                A:C497 X:000C Y:0001 P:eNvmxdizc
$80/C499 A6 23       LDX $23    [$00:1623]   A:C497 X:000C Y:0001 P:eNvMXdizc
$80/C49B BF A2 C4 80 LDA $80C4A2,x[$80:C4A9] A:C497 X:0007 Y:0001 P:envMXdizc
$80/C49F 85 24       STA $24    [$00:1624]   A:C420 X:0007 Y:0001 P:envMXdizc
$80/C4A1 6B          RTL                     A:C420 X:0007 Y:0001 P:envMXdizc

$80/C4AA E2 30       SEP #$30                A:C4AA X:000C Y:0001 P:eNvmxdizc
$80/C4AC A5 23       LDA $23    [$00:1623]   A:C4AA X:000C Y:0001 P:eNvMXdizc
$80/C4AE 0A          ASL A                   A:C407 X:000C Y:0001 P:envMXdizc
$80/C4AF AA          TAX                     A:C40E X:000C Y:0001 P:envMXdizc
$80/C4B0 BF FF C4 80 LDA $80C4FF,x[$80:C50D] A:C40E X:000E Y:0001 P:envMXdizc
$80/C4B4 85 24       STA $24    [$00:1624]   A:C400 X:000E Y:0001 P:envMXdiZc
$80/C4B6 64 25       STZ $25    [$00:1625]   A:C400 X:000E Y:0001 P:envMXdiZc
$80/C4B8 E8          INX                     A:C400 X:000E Y:0001 P:envMXdiZc
$80/C4B9 BF FF C4 80 LDA $80C4FF,x[$80:C50E] A:C400 X:000F Y:0001 P:envMXdizc
$80/C4BD 85 26       STA $26    [$00:1626]   A:C400 X:000F Y:0001 P:envMXdiZc
$80/C4BF 64 27       STZ $27    [$00:1627]   A:C400 X:000F Y:0001 P:envMXdiZc
$80/C4C1 C2 20       REP #$20                A:C400 X:000F Y:0001 P:envMXdiZc
$80/C4C3 A5 24       LDA $24    [$00:1624]   A:C400 X:000F Y:0001 P:envmXdiZc
$80/C4C5 8D 18 00    STA $0018  [$80:0018]   A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4C8 A9 00 00    LDA #$0000              A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4CB 8D 1A 00    STA $001A  [$80:001A]   A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4CE C2 20       REP #$20                A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4D0 A5 26       LDA $26    [$00:1626]   A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4D2 8D 1C 00    STA $001C  [$80:001C]   A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4D5 A9 00 00    LDA #$0000              A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4D8 8D 1E 00    STA $001E  [$80:001E]   A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4DB E2 30       SEP #$30                A:0000 X:000F Y:0001 P:envmXdiZc
$80/C4DD A6 23       LDX $23    [$00:1623]   A:0000 X:000F Y:0001 P:envMXdiZc
$80/C4DF BF F7 C4 80 LDA $80C4F7,x[$80:C4FE] A:0000 X:0007 Y:0001 P:envMXdizc
$80/C4E3 85 24       STA $24    [$00:1624]   A:0001 X:0007 Y:0001 P:envMXdizc
$80/C4E5 18          CLC                     A:0001 X:0007 Y:0001 P:envMXdizc
$80/C4E6 69 1E       ADC #$1E                A:0001 X:0007 Y:0001 P:envMXdizc
$80/C4E8 85 25       STA $25    [$00:1625]   A:001F X:0007 Y:0001 P:envMXdizc
$80/C4EA E2 20       SEP #$20                A:001F X:0007 Y:0001 P:envMXdizc
$80/C4EC AD 41 00    LDA $0041  [$80:0041]   A:001F X:0007 Y:0001 P:envMXdizc
$80/C4EF 29 F0       AND #$F0                A:000F X:0007 Y:0001 P:envMXdizc
$80/C4F1 09 0F       ORA #$0F                A:0000 X:0007 Y:0001 P:envMXdiZc
$80/C4F3 8D 41 00    STA $0041  [$80:0041]   A:000F X:0007 Y:0001 P:envMXdizc
$80/C4F6 6B          RTL                     A:000F X:0007 Y:0001 P:envMXdizc

$80/D5F2 E2 30       SEP #$30                A:BF80 X:0001 Y:0034 P:eNvMXdizC
$80/D5F4 22 D2 93 80 JSL $8093D2[$80:93D2]   A:BF80 X:0001 Y:0034 P:eNvMXdizC
$80/D5F8 E2 30       SEP #$30                A:5580 X:0020 Y:1780 P:envMxdizC
$80/D5FA A9 80       LDA #$80                A:5580 X:0020 Y:0080 P:envMXdizC
$80/D5FC 2C 4E 00    BIT $004E  [$80:004E]   A:5580 X:0020 Y:0080 P:eNvMXdizC
$80/D5FF D0 09       BNE $09    [$D60A]      A:5580 X:0020 Y:0080 P:eNvMXdizC
$80/D60A E2 20       SEP #$20                A:5580 X:0020 Y:0080 P:eNvMXdizC
$80/D60C AD 00 00    LDA $0000  [$80:0000]   A:5580 X:0020 Y:0080 P:eNvMXdizC
$80/D60F 29 F0       AND #$F0                A:5502 X:0020 Y:0080 P:envMXdizC
$80/D611 09 02       ORA #$02                A:5500 X:0020 Y:0080 P:envMXdiZC
$80/D613 8D 00 00    STA $0000  [$80:0000]   A:5502 X:0020 Y:0080 P:envMXdizC
$80/D616 8D 05 21    STA $2105  [$80:2105]   A:5502 X:0020 Y:0080 P:envMXdizC
$80/D619 E2 20       SEP #$20                A:5502 X:0020 Y:0080 P:envMXdizC
$80/D61B AD 42 00    LDA $0042  [$80:0042]   A:5502 X:0020 Y:0080 P:envMXdizC
$80/D61E 29 1F       AND #$1F                A:5561 X:0020 Y:0080 P:envMXdizC
$80/D620 09 00       ORA #$00                A:5501 X:0020 Y:0080 P:envMXdizC
$80/D622 8D 42 00    STA $0042  [$80:0042]   A:5501 X:0020 Y:0080 P:envMXdizC
$80/D625 AD 06 00    LDA $0006  [$80:0006]   A:5501 X:0020 Y:0080 P:envMXdizC
$80/D628 29 FD       AND #$FD                A:5500 X:0020 Y:0080 P:envMXdiZC
$80/D62A 09 00       ORA #$00                A:5500 X:0020 Y:0080 P:envMXdiZC
$80/D62C 8D 06 00    STA $0006  [$80:0006]   A:5500 X:0020 Y:0080 P:envMXdiZC
$80/D62F 8D 33 21    STA $2133  [$80:2133]   A:5500 X:0020 Y:0080 P:envMXdiZC
$80/D632 C2 20       REP #$20                A:5500 X:0020 Y:0080 P:envMXdiZC
$80/D634 A9 F9 FF    LDA #$FFF9              A:5500 X:0020 Y:0080 P:envmXdiZC
$80/D637 8D A3 00    STA $00A3  [$80:00A3]   A:FFF9 X:0020 Y:0080 P:eNvmXdizC
$80/D63A A9 F1 FF    LDA #$FFF1              A:FFF9 X:0020 Y:0080 P:eNvmXdizC
$80/D63D 8D A5 00    STA $00A5  [$80:00A5]   A:FFF1 X:0020 Y:0080 P:eNvmXdizC
$80/D640 E2 30       SEP #$30                A:FFF1 X:0020 Y:0080 P:eNvmXdizC
$80/D642 A9 01       LDA #$01                A:FFF1 X:0020 Y:0080 P:eNvMXdizC
$80/D644 8D 01 00    STA $0001  [$80:0001]   A:FF01 X:0020 Y:0080 P:envMXdizC
$80/D647 8D 07 21    STA $2107  [$80:2107]   A:FF01 X:0020 Y:0080 P:envMXdizC
$80/D64A C2 20       REP #$20                A:FF01 X:0020 Y:0080 P:envMXdizC
$80/D64C E2 30       SEP #$30                A:FF01 X:0020 Y:0080 P:envmXdizC
$80/D64E A9 09       LDA #$09                A:FF01 X:0020 Y:0080 P:envMXdizC
$80/D650 8D 02 00    STA $0002  [$80:0002]   A:FF09 X:0020 Y:0080 P:envMXdizC
$80/D653 8D 08 21    STA $2108  [$80:2108]   A:FF09 X:0020 Y:0080 P:envMXdizC
$80/D656 C2 20       REP #$20                A:FF09 X:0020 Y:0080 P:envMXdizC
$80/D658 E2 20       SEP #$20                A:FF09 X:0020 Y:0080 P:envmXdizC
$80/D65A A9 00       LDA #$00                A:FF09 X:0020 Y:0080 P:envMXdizC
$80/D65C 8D 20 00    STA $0020  [$80:0020]   A:FF00 X:0020 Y:0080 P:envMXdiZC
$80/D65F A9 00       LDA #$00                A:FF00 X:0020 Y:0080 P:envMXdiZC
$80/D661 8D 22 00    STA $0022  [$80:0022]   A:FF00 X:0020 Y:0080 P:envMXdiZC
$80/D664 A9 10       LDA #$10                A:FF00 X:0020 Y:0080 P:envMXdiZC
$80/D666 8D 03 00    STA $0003  [$80:0003]   A:FF10 X:0020 Y:0080 P:envMXdizC
$80/D669 8D 09 21    STA $2109  [$80:2109]   A:FF10 X:0020 Y:0080 P:envMXdizC
$80/D66C C2 20       REP #$20                A:FF10 X:0020 Y:0080 P:envMXdizC
$80/D66E A9 64 44    LDA #$4464              A:FF10 X:0020 Y:0080 P:envmXdizC
$80/D671 8D 0B 21    STA $210B  [$80:210B]   A:4464 X:0020 Y:0080 P:envmXdizC
$80/D674 A9 00 40    LDA #$4000              A:4464 X:0020 Y:0080 P:envmXdizC
$80/D677 8D 0D 00    STA $000D  [$80:000D]   A:4000 X:0020 Y:0080 P:envmXdizC
$80/D67A A9 00 60    LDA #$6000              A:4000 X:0020 Y:0080 P:envmXdizC
$80/D67D 8D 0F 00    STA $000F  [$80:000F]   A:6000 X:0020 Y:0080 P:envmXdizC
$80/D680 A9 00 40    LDA #$4000              A:6000 X:0020 Y:0080 P:envmXdizC
$80/D683 8D 11 00    STA $0011  [$80:0011]   A:4000 X:0020 Y:0080 P:envmXdizC
$80/D686 A9 00 40    LDA #$4000              A:4000 X:0020 Y:0080 P:envmXdizC
$80/D689 8D 13 00    STA $0013  [$80:0013]   A:4000 X:0020 Y:0080 P:envmXdizC
$80/D68C E2 20       SEP #$20                A:4000 X:0020 Y:0080 P:envmXdizC
$80/D68E AD 42 00    LDA $0042  [$80:0042]   A:4000 X:0020 Y:0080 P:envMXdizC
$80/D691 29 60       AND #$60                A:4001 X:0020 Y:0080 P:envMXdizC
$80/D693 09 01       ORA #$01                A:4000 X:0020 Y:0080 P:envMXdiZC
$80/D695 8D 42 00    STA $0042  [$80:0042]   A:4001 X:0020 Y:0080 P:envMXdizC
$80/D698 C2 20       REP #$20                A:4001 X:0020 Y:0080 P:envMXdizC
$80/D69A A9 00 20    LDA #$2000              A:4001 X:0020 Y:0080 P:envmXdizC
$80/D69D 8D 09 00    STA $0009  [$80:0009]   A:2000 X:0020 Y:0080 P:envmXdizC
$80/D6A0 A9 00 30    LDA #$3000              A:2000 X:0020 Y:0080 P:envmXdizC
$80/D6A3 8D 0B 00    STA $000B  [$80:000B]   A:3000 X:0020 Y:0080 P:envmXdizC
$80/D6A6 E2 20       SEP #$20                A:3000 X:0020 Y:0080 P:envmXdizC
$80/D6A8 9C 34 00    STZ $0034  [$80:0034]   A:3000 X:0020 Y:0080 P:envMXdizC
$80/D6AB 9C 35 00    STZ $0035  [$80:0035]   A:3000 X:0020 Y:0080 P:envMXdizC
$80/D6AE 9C 36 00    STZ $0036  [$80:0036]   A:3000 X:0020 Y:0080 P:envMXdizC
$80/D6B1 A9 13       LDA #$13                A:3000 X:0020 Y:0080 P:envMXdizC
$80/D6B3 8D 3D 00    STA $003D  [$80:003D]   A:3013 X:0020 Y:0080 P:envMXdizC
$80/D6B6 9C 3E 00    STZ $003E  [$80:003E]   A:3013 X:0020 Y:0080 P:envMXdizC
$80/D6B9 9C 3F 00    STZ $003F  [$80:003F]   A:3013 X:0020 Y:0080 P:envMXdizC
$80/D6BC 9C 40 00    STZ $0040  [$80:0040]   A:3013 X:0020 Y:0080 P:envMXdizC
$80/D6BF E2 20       SEP #$20                A:3013 X:0020 Y:0080 P:envMXdizC
$80/D6C1 AD 41 00    LDA $0041  [$80:0041]   A:3013 X:0020 Y:0080 P:envMXdizC
$80/D6C4 29 F0       AND #$F0                A:308F X:0020 Y:0080 P:eNvMXdizC
$80/D6C6 09 00       ORA #$00                A:3080 X:0020 Y:0080 P:eNvMXdizC
$80/D6C8 8D 41 00    STA $0041  [$80:0041]   A:3080 X:0020 Y:0080 P:eNvMXdizC
$80/D6CB C2 20       REP #$20                A:3080 X:0020 Y:0080 P:eNvMXdizC
$80/D6CD A9 00 00    LDA #$0000              A:3080 X:0020 Y:0080 P:eNvmXdizC
$80/D6D0 8D 18 00    STA $0018  [$80:0018]   A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6D3 A9 00 00    LDA #$0000              A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6D6 8D 1A 00    STA $001A  [$80:001A]   A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6D9 C2 20       REP #$20                A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6DB A9 00 00    LDA #$0000              A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6DE 8D 1C 00    STA $001C  [$80:001C]   A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6E1 A9 00 00    LDA #$0000              A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6E4 8D 1E 00    STA $001E  [$80:001E]   A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6E7 C2 20       REP #$20                A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6E9 9C 82 07    STZ $0782  [$80:0782]   A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6EC 9C 84 07    STZ $0784  [$80:0784]   A:0000 X:0020 Y:0080 P:envmXdiZC
$80/D6EF 6B          RTL                     A:0000 X:0020 Y:0080 P:envmXdiZC


// non-standard rom header, doesn't follow snes dev manual guidelines
rom_header:
$80/FFB0
0x00 0x00 // maker code (should be ascii)
0x02 0x00 0x00 0x00 // game code (should be ascii)
0x08 0x20 0x00 0x00 0x00 0x01 0x00 // ??? (should be constant 0x00)
0x00 // expansion ram size
0x00 // special version
0x00 // cartridge subnumber
"KOUTETSU-NO KISHI    " // game title
0x30 // map mode == mode 20, 3.58 MHz
0x02 // cartridge type == rom + ram + battery
0x0A // rom size == 5 - 8 Mib (happens to be 8 Mib)
0x03 // ram size == 64 Kib
0x00 // destination code == japan
0xE8 // ??? (should be constant 0x33)
0x00 // mask rom version
0xED27 // complement checksum
0x12D8 // checksum


vector_table:
$80/FFE0
0x8000, 0x8009, 0x8012, 0x801B, 0x8024, 0x808F, 0x802D, 0x80AF
0x8036, 0x803F, 0x8048, 0x8051, 0x805A, 0x8063, 0x8075, 0x806C

